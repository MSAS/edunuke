//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("EduNuke", "UserStudent", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.User), "Student", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EduNuke.Student))]
[assembly: EdmRelationshipAttribute("EduNuke", "UserEmployee", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.User), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EduNuke.Employee))]
[assembly: EdmRelationshipAttribute("EduNuke", "CollegeDepartment", "College", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.College), "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Department))]
[assembly: EdmRelationshipAttribute("EduNuke", "DepartmentSubjects", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Department), "Subjects", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Subject))]
[assembly: EdmRelationshipAttribute("EduNuke", "CourseSemesters", "Course", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Course), "Semesters", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Semester))]
[assembly: EdmRelationshipAttribute("EduNuke", "EmployeeReportingOfficer", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EduNuke.Employee), "ReportingOfficer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Employee))]
[assembly: EdmRelationshipAttribute("EduNuke", "CourseBatch", "Course", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Course), "Batch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Batch))]
[assembly: EdmRelationshipAttribute("EduNuke", "DepartmentCourse", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Department), "Course", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Course))]
[assembly: EdmRelationshipAttribute("EduNuke", "SemestersSubject", "Semesters", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Semester), "Subject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Subject))]
[assembly: EdmRelationshipAttribute("EduNuke", "DepartmentEmployee", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Department), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Employee))]
[assembly: EdmRelationshipAttribute("EduNuke", "BatchSection", "Batch", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Batch), "Section", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Section))]
[assembly: EdmRelationshipAttribute("EduNuke", "SectionStudent", "Section", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Section), "Student", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Student))]
[assembly: EdmRelationshipAttribute("EduNuke", "EventAttendance", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Event), "Attendance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Attendance))]
[assembly: EdmRelationshipAttribute("EduNuke", "UserAttendance", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.User), "Attendance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Attendance))]
[assembly: EdmRelationshipAttribute("EduNuke", "SubjectSubjectInstance", "Subject", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Subject), "SubjectInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.SubjectInstance))]
[assembly: EdmRelationshipAttribute("EduNuke", "SubjectBook", "Subject", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Subject), "Book", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Book))]
[assembly: EdmRelationshipAttribute("EduNuke", "EmployeeSubjectInstance", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Employee), "SubjectInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.SubjectInstance))]
[assembly: EdmRelationshipAttribute("EduNuke", "SubjectInstanceEvent", "SubjectInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EduNuke.SubjectInstance), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Event))]
[assembly: EdmRelationshipAttribute("EduNuke", "LocationEvent", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Location), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Event))]
[assembly: EdmRelationshipAttribute("EduNuke", "SubjectInstanceStudent", "SubjectInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.SubjectInstance), "Student", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Student))]
[assembly: EdmRelationshipAttribute("EduNuke", "StudentResult", "Student", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Student), "Result", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Result))]
[assembly: EdmRelationshipAttribute("EduNuke", "ExamResult", "Exam", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Exam), "Result", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Result))]
[assembly: EdmRelationshipAttribute("EduNuke", "SubjectExam", "Subject", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Subject), "Exam", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Exam))]
[assembly: EdmRelationshipAttribute("EduNuke", "SubjectAssignment", "Subject", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Subject), "Assignment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Assignment))]
[assembly: EdmRelationshipAttribute("EduNuke", "DocumentsAssignment", "Documents", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Document), "Assignment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Assignment))]
[assembly: EdmRelationshipAttribute("EduNuke", "AssignmentAssignmentSolution", "Assignment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Assignment), "AssignmentSolution", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.AssignmentSolution))]
[assembly: EdmRelationshipAttribute("EduNuke", "DocumentsAssignmentSolution", "Documents", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Document), "AssignmentSolution", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.AssignmentSolution))]
[assembly: EdmRelationshipAttribute("EduNuke", "StudentAssignmentSolution", "Student", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Student), "AssignmentSolution", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.AssignmentSolution))]
[assembly: EdmRelationshipAttribute("EduNuke", "UserDocuments", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.User), "Documents", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Document))]
[assembly: EdmRelationshipAttribute("EduNuke", "UserStudent1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EduNuke.User), "Student", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Student))]
[assembly: EdmRelationshipAttribute("EduNuke", "CourseTypeCourse", "CourseType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.CourseType), "Course", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Course))]
[assembly: EdmRelationshipAttribute("EduNuke", "BatchSemesters", "Batch", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Batch), "Semesters", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EduNuke.Semester))]
[assembly: EdmRelationshipAttribute("EduNuke", "UserExperience", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.User), "Experience", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Experience))]
[assembly: EdmRelationshipAttribute("EduNuke", "UserQualification", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.User), "Qualification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Qualification))]
[assembly: EdmRelationshipAttribute("EduNuke", "DesignationDesignation", "Designation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EduNuke.Designation), "Designation1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Designation))]
[assembly: EdmRelationshipAttribute("EduNuke", "DesignationEmployee", "Designation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Designation), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Employee))]
[assembly: EdmRelationshipAttribute("EduNuke", "InstituteGroupCollege", "InstituteGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.InstituteGroup), "College", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.College))]
[assembly: EdmRelationshipAttribute("EduNuke", "RouteSpot", "Route", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Route), "Spot", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Spot))]
[assembly: EdmRelationshipAttribute("EduNuke", "RouteVehicle", "Route", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Route), "Vehicle", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Vehicle))]
[assembly: EdmRelationshipAttribute("EduNuke", "SpotUser", "Spot", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EduNuke.Spot), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.User))]
[assembly: EdmRelationshipAttribute("EduNuke", "DocumentsSubject", "Documents", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EduNuke.Document), "Subject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Subject))]
[assembly: EdmRelationshipAttribute("EduNuke", "DocumentsExam", "Documents", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EduNuke.Document), "Exam", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Exam))]
[assembly: EdmRelationshipAttribute("EduNuke", "EventExam", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Event), "Exam", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EduNuke.Exam))]
[assembly: EdmRelationshipAttribute("EduNuke", "ItemIssueDetails", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Item), "IssueDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.IssueDetails))]
[assembly: EdmRelationshipAttribute("EduNuke", "UserIssueDetails", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.User), "IssueDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.IssueDetails))]
[assembly: EdmRelationshipAttribute("EduNuke", "CollegeStore", "College", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.College), "Store", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Store))]
[assembly: EdmRelationshipAttribute("EduNuke", "ItemItemRequisition", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Item), "ItemRequisition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.ItemRequisition))]
[assembly: EdmRelationshipAttribute("EduNuke", "UserItemRequisition", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.User), "ItemRequisition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.ItemRequisition))]
[assembly: EdmRelationshipAttribute("EduNuke", "StoreItemRequisition", "Store", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Store), "ItemRequisition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.ItemRequisition))]
[assembly: EdmRelationshipAttribute("EduNuke", "ItemStock", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Item), "Stock", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Stock))]
[assembly: EdmRelationshipAttribute("EduNuke", "StoreStock", "Store", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Store), "Stock", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Stock))]
[assembly: EdmRelationshipAttribute("EduNuke", "ItemItemSale", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Item), "ItemSale", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.ItemSale))]
[assembly: EdmRelationshipAttribute("EduNuke", "StoreItemSale", "Store", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Store), "ItemSale", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.ItemSale))]
[assembly: EdmRelationshipAttribute("EduNuke", "CategoryCategory", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EduNuke.Category), "Category1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Category))]
[assembly: EdmRelationshipAttribute("EduNuke", "CategoryItem", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Category), "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Item))]
[assembly: EdmRelationshipAttribute("EduNuke", "DocumentsDocStore", "Document", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Document), "DocStore", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EduNuke.DocStore))]
[assembly: EdmRelationshipAttribute("EduNuke", "TransactionTypeTransaction", "TransactionType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.TransactionType), "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Transaction))]
[assembly: EdmRelationshipAttribute("EduNuke", "UserAccount", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EduNuke.User), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EduNuke.Account))]
[assembly: EdmRelationshipAttribute("EduNuke", "TransactionDebitsCredits", "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Transaction), "DebitsCredits", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.DebitsCredits))]
[assembly: EdmRelationshipAttribute("EduNuke", "AccountDebitsCredits", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.Account), "DebitsCredits", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.DebitsCredits))]
[assembly: EdmRelationshipAttribute("EduNuke", "UserTransaction", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.User), "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Transaction))]
[assembly: EdmRelationshipAttribute("EduNuke", "InstituteGroupTransaction", "InstituteGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EduNuke.InstituteGroup), "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EduNuke.Transaction))]

#endregion

namespace EduNuke
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class EdunukeContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new EdunukeContainer object using the connection string found in the 'EdunukeContainer' section of the application configuration file.
        /// </summary>
        public EdunukeContainer() : base("name=EdunukeContainer", "EdunukeContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EdunukeContainer object.
        /// </summary>
        public EdunukeContainer(string connectionString) : base(connectionString, "EdunukeContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EdunukeContainer object.
        /// </summary>
        public EdunukeContainer(EntityConnection connection) : base(connection, "EdunukeContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employee> Employees
        {
            get
            {
                if ((_Employees == null))
                {
                    _Employees = base.CreateObjectSet<Employee>("Employees");
                }
                return _Employees;
            }
        }
        private ObjectSet<Employee> _Employees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Student> Students
        {
            get
            {
                if ((_Students == null))
                {
                    _Students = base.CreateObjectSet<Student>("Students");
                }
                return _Students;
            }
        }
        private ObjectSet<Student> _Students;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Batch> Batches
        {
            get
            {
                if ((_Batches == null))
                {
                    _Batches = base.CreateObjectSet<Batch>("Batches");
                }
                return _Batches;
            }
        }
        private ObjectSet<Batch> _Batches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<College> Colleges
        {
            get
            {
                if ((_Colleges == null))
                {
                    _Colleges = base.CreateObjectSet<College>("Colleges");
                }
                return _Colleges;
            }
        }
        private ObjectSet<College> _Colleges;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Course> Courses
        {
            get
            {
                if ((_Courses == null))
                {
                    _Courses = base.CreateObjectSet<Course>("Courses");
                }
                return _Courses;
            }
        }
        private ObjectSet<Course> _Courses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Department> Departments
        {
            get
            {
                if ((_Departments == null))
                {
                    _Departments = base.CreateObjectSet<Department>("Departments");
                }
                return _Departments;
            }
        }
        private ObjectSet<Department> _Departments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Subject> Subjects1
        {
            get
            {
                if ((_Subjects1 == null))
                {
                    _Subjects1 = base.CreateObjectSet<Subject>("Subjects1");
                }
                return _Subjects1;
            }
        }
        private ObjectSet<Subject> _Subjects1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Section> Sections
        {
            get
            {
                if ((_Sections == null))
                {
                    _Sections = base.CreateObjectSet<Section>("Sections");
                }
                return _Sections;
            }
        }
        private ObjectSet<Section> _Sections;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Semester> Semesters
        {
            get
            {
                if ((_Semesters == null))
                {
                    _Semesters = base.CreateObjectSet<Semester>("Semesters");
                }
                return _Semesters;
            }
        }
        private ObjectSet<Semester> _Semesters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Attendance> Attendances
        {
            get
            {
                if ((_Attendances == null))
                {
                    _Attendances = base.CreateObjectSet<Attendance>("Attendances");
                }
                return _Attendances;
            }
        }
        private ObjectSet<Attendance> _Attendances;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Event> Events
        {
            get
            {
                if ((_Events == null))
                {
                    _Events = base.CreateObjectSet<Event>("Events");
                }
                return _Events;
            }
        }
        private ObjectSet<Event> _Events;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubjectInstance> SubjectInstances
        {
            get
            {
                if ((_SubjectInstances == null))
                {
                    _SubjectInstances = base.CreateObjectSet<SubjectInstance>("SubjectInstances");
                }
                return _SubjectInstances;
            }
        }
        private ObjectSet<SubjectInstance> _SubjectInstances;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Location> Locations
        {
            get
            {
                if ((_Locations == null))
                {
                    _Locations = base.CreateObjectSet<Location>("Locations");
                }
                return _Locations;
            }
        }
        private ObjectSet<Location> _Locations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Exam> Exams
        {
            get
            {
                if ((_Exams == null))
                {
                    _Exams = base.CreateObjectSet<Exam>("Exams");
                }
                return _Exams;
            }
        }
        private ObjectSet<Exam> _Exams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Result> Results
        {
            get
            {
                if ((_Results == null))
                {
                    _Results = base.CreateObjectSet<Result>("Results");
                }
                return _Results;
            }
        }
        private ObjectSet<Result> _Results;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GlobalAudit> GlobalAudits
        {
            get
            {
                if ((_GlobalAudits == null))
                {
                    _GlobalAudits = base.CreateObjectSet<GlobalAudit>("GlobalAudits");
                }
                return _GlobalAudits;
            }
        }
        private ObjectSet<GlobalAudit> _GlobalAudits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Document> Documents
        {
            get
            {
                if ((_Documents == null))
                {
                    _Documents = base.CreateObjectSet<Document>("Documents");
                }
                return _Documents;
            }
        }
        private ObjectSet<Document> _Documents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Assignment> Assignments
        {
            get
            {
                if ((_Assignments == null))
                {
                    _Assignments = base.CreateObjectSet<Assignment>("Assignments");
                }
                return _Assignments;
            }
        }
        private ObjectSet<Assignment> _Assignments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AssignmentSolution> AssignmentSolutions
        {
            get
            {
                if ((_AssignmentSolutions == null))
                {
                    _AssignmentSolutions = base.CreateObjectSet<AssignmentSolution>("AssignmentSolutions");
                }
                return _AssignmentSolutions;
            }
        }
        private ObjectSet<AssignmentSolution> _AssignmentSolutions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CourseType> CourseTypes
        {
            get
            {
                if ((_CourseTypes == null))
                {
                    _CourseTypes = base.CreateObjectSet<CourseType>("CourseTypes");
                }
                return _CourseTypes;
            }
        }
        private ObjectSet<CourseType> _CourseTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Experience> Experiences
        {
            get
            {
                if ((_Experiences == null))
                {
                    _Experiences = base.CreateObjectSet<Experience>("Experiences");
                }
                return _Experiences;
            }
        }
        private ObjectSet<Experience> _Experiences;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Qualification> Qualifications
        {
            get
            {
                if ((_Qualifications == null))
                {
                    _Qualifications = base.CreateObjectSet<Qualification>("Qualifications");
                }
                return _Qualifications;
            }
        }
        private ObjectSet<Qualification> _Qualifications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Designation> Designations
        {
            get
            {
                if ((_Designations == null))
                {
                    _Designations = base.CreateObjectSet<Designation>("Designations");
                }
                return _Designations;
            }
        }
        private ObjectSet<Designation> _Designations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InstituteGroup> InstituteGroups
        {
            get
            {
                if ((_InstituteGroups == null))
                {
                    _InstituteGroups = base.CreateObjectSet<InstituteGroup>("InstituteGroups");
                }
                return _InstituteGroups;
            }
        }
        private ObjectSet<InstituteGroup> _InstituteGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Spot> Spots
        {
            get
            {
                if ((_Spots == null))
                {
                    _Spots = base.CreateObjectSet<Spot>("Spots");
                }
                return _Spots;
            }
        }
        private ObjectSet<Spot> _Spots;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Route> Routes
        {
            get
            {
                if ((_Routes == null))
                {
                    _Routes = base.CreateObjectSet<Route>("Routes");
                }
                return _Routes;
            }
        }
        private ObjectSet<Route> _Routes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Vehicle> Vehicles1
        {
            get
            {
                if ((_Vehicles1 == null))
                {
                    _Vehicles1 = base.CreateObjectSet<Vehicle>("Vehicles1");
                }
                return _Vehicles1;
            }
        }
        private ObjectSet<Vehicle> _Vehicles1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Item> InventorySet
        {
            get
            {
                if ((_InventorySet == null))
                {
                    _InventorySet = base.CreateObjectSet<Item>("InventorySet");
                }
                return _InventorySet;
            }
        }
        private ObjectSet<Item> _InventorySet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IssueDetails> IssueDetailsSet
        {
            get
            {
                if ((_IssueDetailsSet == null))
                {
                    _IssueDetailsSet = base.CreateObjectSet<IssueDetails>("IssueDetailsSet");
                }
                return _IssueDetailsSet;
            }
        }
        private ObjectSet<IssueDetails> _IssueDetailsSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Store> Stores
        {
            get
            {
                if ((_Stores == null))
                {
                    _Stores = base.CreateObjectSet<Store>("Stores");
                }
                return _Stores;
            }
        }
        private ObjectSet<Store> _Stores;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemRequisition> ItemRequisitions
        {
            get
            {
                if ((_ItemRequisitions == null))
                {
                    _ItemRequisitions = base.CreateObjectSet<ItemRequisition>("ItemRequisitions");
                }
                return _ItemRequisitions;
            }
        }
        private ObjectSet<ItemRequisition> _ItemRequisitions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Stock> Stocks
        {
            get
            {
                if ((_Stocks == null))
                {
                    _Stocks = base.CreateObjectSet<Stock>("Stocks");
                }
                return _Stocks;
            }
        }
        private ObjectSet<Stock> _Stocks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemSale> ItemSales
        {
            get
            {
                if ((_ItemSales == null))
                {
                    _ItemSales = base.CreateObjectSet<ItemSale>("ItemSales");
                }
                return _ItemSales;
            }
        }
        private ObjectSet<ItemSale> _ItemSales;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DocStore> DocStores
        {
            get
            {
                if ((_DocStores == null))
                {
                    _DocStores = base.CreateObjectSet<DocStore>("DocStores");
                }
                return _DocStores;
            }
        }
        private ObjectSet<DocStore> _DocStores;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Transaction> Transactions
        {
            get
            {
                if ((_Transactions == null))
                {
                    _Transactions = base.CreateObjectSet<Transaction>("Transactions");
                }
                return _Transactions;
            }
        }
        private ObjectSet<Transaction> _Transactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransactionType> TransactionTypes
        {
            get
            {
                if ((_TransactionTypes == null))
                {
                    _TransactionTypes = base.CreateObjectSet<TransactionType>("TransactionTypes");
                }
                return _TransactionTypes;
            }
        }
        private ObjectSet<TransactionType> _TransactionTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Account> Accounts
        {
            get
            {
                if ((_Accounts == null))
                {
                    _Accounts = base.CreateObjectSet<Account>("Accounts");
                }
                return _Accounts;
            }
        }
        private ObjectSet<Account> _Accounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DebitsCredits> DebitsCredits
        {
            get
            {
                if ((_DebitsCredits == null))
                {
                    _DebitsCredits = base.CreateObjectSet<DebitsCredits>("DebitsCredits");
                }
                return _DebitsCredits;
            }
        }
        private ObjectSet<DebitsCredits> _DebitsCredits;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployees(Employee employee)
        {
            base.AddObject("Employees", employee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Students EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStudents(Student student)
        {
            base.AddObject("Students", student);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Batches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBatches(Batch batch)
        {
            base.AddObject("Batches", batch);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Colleges EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToColleges(College college)
        {
            base.AddObject("Colleges", college);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Courses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCourses(Course course)
        {
            base.AddObject("Courses", course);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Departments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDepartments(Department department)
        {
            base.AddObject("Departments", department);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Subjects1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubjects1(Subject subject)
        {
            base.AddObject("Subjects1", subject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sections EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSections(Section section)
        {
            base.AddObject("Sections", section);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Semesters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSemesters(Semester semester)
        {
            base.AddObject("Semesters", semester);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Attendances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAttendances(Attendance attendance)
        {
            base.AddObject("Attendances", attendance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Events EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvents(Event @event)
        {
            base.AddObject("Events", @event);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubjectInstances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubjectInstances(SubjectInstance subjectInstance)
        {
            base.AddObject("SubjectInstances", subjectInstance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Locations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocations(Location location)
        {
            base.AddObject("Locations", location);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Exams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExams(Exam exam)
        {
            base.AddObject("Exams", exam);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Results EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResults(Result result)
        {
            base.AddObject("Results", result);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GlobalAudits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGlobalAudits(GlobalAudit globalAudit)
        {
            base.AddObject("GlobalAudits", globalAudit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Documents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocuments(Document document)
        {
            base.AddObject("Documents", document);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Assignments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssignments(Assignment assignment)
        {
            base.AddObject("Assignments", assignment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AssignmentSolutions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssignmentSolutions(AssignmentSolution assignmentSolution)
        {
            base.AddObject("AssignmentSolutions", assignmentSolution);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CourseTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCourseTypes(CourseType courseType)
        {
            base.AddObject("CourseTypes", courseType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Experiences EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExperiences(Experience experience)
        {
            base.AddObject("Experiences", experience);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Qualifications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQualifications(Qualification qualification)
        {
            base.AddObject("Qualifications", qualification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Designations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDesignations(Designation designation)
        {
            base.AddObject("Designations", designation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InstituteGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInstituteGroups(InstituteGroup instituteGroup)
        {
            base.AddObject("InstituteGroups", instituteGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Spots EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSpots(Spot spot)
        {
            base.AddObject("Spots", spot);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Routes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoutes(Route route)
        {
            base.AddObject("Routes", route);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Vehicles1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVehicles1(Vehicle vehicle)
        {
            base.AddObject("Vehicles1", vehicle);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InventorySet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInventorySet(Item item)
        {
            base.AddObject("InventorySet", item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IssueDetailsSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIssueDetailsSet(IssueDetails issueDetails)
        {
            base.AddObject("IssueDetailsSet", issueDetails);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Stores EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStores(Store store)
        {
            base.AddObject("Stores", store);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemRequisitions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemRequisitions(ItemRequisition itemRequisition)
        {
            base.AddObject("ItemRequisitions", itemRequisition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Stocks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStocks(Stock stock)
        {
            base.AddObject("Stocks", stock);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemSales EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemSales(ItemSale itemSale)
        {
            base.AddObject("ItemSales", itemSale);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DocStores EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocStores(DocStore docStore)
        {
            base.AddObject("DocStores", docStore);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Transactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactions(Transaction transaction)
        {
            base.AddObject("Transactions", transaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TransactionTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactionTypes(TransactionType transactionType)
        {
            base.AddObject("TransactionTypes", transactionType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Accounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccounts(Account account)
        {
            base.AddObject("Accounts", account);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DebitsCredits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDebitsCredits(DebitsCredits debitsCredits)
        {
            base.AddObject("DebitsCredits", debitsCredits);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="Account")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Account : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Account object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="accountType">Initial value of the AccountType property.</param>
        /// <param name="accountNo">Initial value of the AccountNo property.</param>
        public static Account CreateAccount(global::System.Int32 id, global::System.String name, global::System.String accountType, global::System.String accountNo)
        {
            Account account = new Account();
            account.Id = id;
            account.Name = name;
            account.AccountType = accountType;
            account.AccountNo = accountNo;
            return account;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 
        /// </summary>
        /// <LongDescription>
        /// sales/cash/bank/discount/scholarship
        /// </LongDescription>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 
        /// </summary>
        /// <LongDescription>
        /// Liability,Asset,Equity,Revenue,Cost_of_Sale,expense,tax
        /// </LongDescription>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountType
        {
            get
            {
                return _AccountType;
            }
            set
            {
                OnAccountTypeChanging(value);
                ReportPropertyChanging("AccountType");
                _AccountType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountType");
                OnAccountTypeChanged();
            }
        }
        private global::System.String _AccountType;
        partial void OnAccountTypeChanging(global::System.String value);
        partial void OnAccountTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountNo
        {
            get
            {
                return _AccountNo;
            }
            set
            {
                OnAccountNoChanging(value);
                ReportPropertyChanging("AccountNo");
                _AccountNo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountNo");
                OnAccountNoChanged();
            }
        }
        private global::System.String _AccountNo;
        partial void OnAccountNoChanging(global::System.String value);
        partial void OnAccountNoChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "UserAccount", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EduNuke.UserAccount", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EduNuke.UserAccount", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EduNuke.UserAccount", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EduNuke.UserAccount", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "AccountDebitsCredits", "DebitsCredits")]
        public EntityCollection<DebitsCredits> DebitsCredits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DebitsCredits>("EduNuke.AccountDebitsCredits", "DebitsCredits");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DebitsCredits>("EduNuke.AccountDebitsCredits", "DebitsCredits", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="Assignment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Assignment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Assignment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="topic">Initial value of the Topic property.</param>
        public static Assignment CreateAssignment(global::System.Int32 id, global::System.String topic)
        {
            Assignment assignment = new Assignment();
            assignment.Id = id;
            assignment.Topic = topic;
            return assignment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Topic
        {
            get
            {
                return _Topic;
            }
            set
            {
                OnTopicChanging(value);
                ReportPropertyChanging("Topic");
                _Topic = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Topic");
                OnTopicChanged();
            }
        }
        private global::System.String _Topic;
        partial void OnTopicChanging(global::System.String value);
        partial void OnTopicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastDate
        {
            get
            {
                return _LastDate;
            }
            set
            {
                OnLastDateChanging(value);
                ReportPropertyChanging("LastDate");
                _LastDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastDate");
                OnLastDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastDate;
        partial void OnLastDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "SubjectAssignment", "Subject")]
        public Subject Subject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("EduNuke.SubjectAssignment", "Subject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("EduNuke.SubjectAssignment", "Subject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subject> SubjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("EduNuke.SubjectAssignment", "Subject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subject>("EduNuke.SubjectAssignment", "Subject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "DocumentsAssignment", "Documents")]
        public Document Questionnaire
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("EduNuke.DocumentsAssignment", "Documents").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("EduNuke.DocumentsAssignment", "Documents").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Document> QuestionnaireReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("EduNuke.DocumentsAssignment", "Documents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Document>("EduNuke.DocumentsAssignment", "Documents", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "AssignmentAssignmentSolution", "AssignmentSolution")]
        public EntityCollection<AssignmentSolution> AssignmentSolutions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AssignmentSolution>("EduNuke.AssignmentAssignmentSolution", "AssignmentSolution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AssignmentSolution>("EduNuke.AssignmentAssignmentSolution", "AssignmentSolution", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="AssignmentSolution")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AssignmentSolution : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AssignmentSolution object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static AssignmentSolution CreateAssignmentSolution(global::System.Int32 id)
        {
            AssignmentSolution assignmentSolution = new AssignmentSolution();
            assignmentSolution.Id = id;
            return assignmentSolution;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "AssignmentAssignmentSolution", "Assignment")]
        public Assignment Assignment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Assignment>("EduNuke.AssignmentAssignmentSolution", "Assignment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Assignment>("EduNuke.AssignmentAssignmentSolution", "Assignment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Assignment> AssignmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Assignment>("EduNuke.AssignmentAssignmentSolution", "Assignment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Assignment>("EduNuke.AssignmentAssignmentSolution", "Assignment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "DocumentsAssignmentSolution", "Documents")]
        public Document Document
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("EduNuke.DocumentsAssignmentSolution", "Documents").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("EduNuke.DocumentsAssignmentSolution", "Documents").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Document> DocumentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("EduNuke.DocumentsAssignmentSolution", "Documents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Document>("EduNuke.DocumentsAssignmentSolution", "Documents", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "StudentAssignmentSolution", "Student")]
        public Student Student
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("EduNuke.StudentAssignmentSolution", "Student").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("EduNuke.StudentAssignmentSolution", "Student").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Student> StudentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("EduNuke.StudentAssignmentSolution", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Student>("EduNuke.StudentAssignmentSolution", "Student", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="Attendance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Attendance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Attendance object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="attended">Initial value of the Attended property.</param>
        /// <param name="remarks">Initial value of the Remarks property.</param>
        public static Attendance CreateAttendance(global::System.Int32 id, global::System.Boolean attended, global::System.String remarks)
        {
            Attendance attendance = new Attendance();
            attendance.Id = id;
            attendance.Attended = attended;
            attendance.Remarks = remarks;
            return attendance;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Attended
        {
            get
            {
                return _Attended;
            }
            set
            {
                OnAttendedChanging(value);
                ReportPropertyChanging("Attended");
                _Attended = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Attended");
                OnAttendedChanged();
            }
        }
        private global::System.Boolean _Attended;
        partial void OnAttendedChanging(global::System.Boolean value);
        partial void OnAttendedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "EventAttendance", "Event")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EduNuke.EventAttendance", "Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EduNuke.EventAttendance", "Event").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EduNuke.EventAttendance", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("EduNuke.EventAttendance", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "UserAttendance", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EduNuke.UserAttendance", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EduNuke.UserAttendance", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EduNuke.UserAttendance", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EduNuke.UserAttendance", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="Batch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Batch : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Batch object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="lastRollNo">Initial value of the LastRollNo property.</param>
        public static Batch CreateBatch(global::System.Int32 id, global::System.DateTime startDate, global::System.DateTime endDate, global::System.Single status, global::System.Int32 lastRollNo)
        {
            Batch batch = new Batch();
            batch.Id = id;
            batch.StartDate = startDate;
            batch.EndDate = endDate;
            batch.Status = status;
            batch.LastRollNo = lastRollNo;
            return batch;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// AdmissionsOn, AdmissionsClosed, Started, Completed
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Single _Status;
        partial void OnStatusChanging(global::System.Single value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LastRollNo
        {
            get
            {
                return _LastRollNo;
            }
            set
            {
                OnLastRollNoChanging(value);
                ReportPropertyChanging("LastRollNo");
                _LastRollNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastRollNo");
                OnLastRollNoChanged();
            }
        }
        private global::System.Int32 _LastRollNo;
        partial void OnLastRollNoChanging(global::System.Int32 value);
        partial void OnLastRollNoChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "CourseBatch", "Course")]
        public Course Course
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("EduNuke.CourseBatch", "Course").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("EduNuke.CourseBatch", "Course").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Course> CourseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("EduNuke.CourseBatch", "Course");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Course>("EduNuke.CourseBatch", "Course", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "BatchSection", "Section")]
        public EntityCollection<Section> Sections
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Section>("EduNuke.BatchSection", "Section");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Section>("EduNuke.BatchSection", "Section", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "BatchSemesters", "Semesters")]
        public Semester CurrentSemester
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Semester>("EduNuke.BatchSemesters", "Semesters").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Semester>("EduNuke.BatchSemesters", "Semesters").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Semester> CurrentSemesterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Semester>("EduNuke.BatchSemesters", "Semesters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Semester>("EduNuke.BatchSemesters", "Semesters", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="Book")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Book : Item
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Book object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="iSBN">Initial value of the ISBN property.</param>
        public static Book CreateBook(global::System.Int32 id, global::System.String iSBN)
        {
            Book book = new Book();
            book.Id = id;
            book.ISBN = iSBN;
            return book;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ISBN
        {
            get
            {
                return _ISBN;
            }
            set
            {
                OnISBNChanging(value);
                ReportPropertyChanging("ISBN");
                _ISBN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ISBN");
                OnISBNChanged();
            }
        }
        private global::System.String _ISBN;
        partial void OnISBNChanging(global::System.String value);
        partial void OnISBNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Author
        {
            get
            {
                return _Author;
            }
            set
            {
                OnAuthorChanging(value);
                ReportPropertyChanging("Author");
                _Author = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Author");
                OnAuthorChanged();
            }
        }
        private Nullable<global::System.Int32> _Author;
        partial void OnAuthorChanging(Nullable<global::System.Int32> value);
        partial void OnAuthorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Publisher
        {
            get
            {
                return _Publisher;
            }
            set
            {
                OnPublisherChanging(value);
                ReportPropertyChanging("Publisher");
                _Publisher = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Publisher");
                OnPublisherChanged();
            }
        }
        private global::System.String _Publisher;
        partial void OnPublisherChanging(global::System.String value);
        partial void OnPublisherChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Edition
        {
            get
            {
                return _Edition;
            }
            set
            {
                OnEditionChanging(value);
                ReportPropertyChanging("Edition");
                _Edition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Edition");
                OnEditionChanged();
            }
        }
        private global::System.String _Edition;
        partial void OnEditionChanging(global::System.String value);
        partial void OnEditionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.String _Year;
        partial void OnYearChanging(global::System.String value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "SubjectBook", "Subject")]
        public Subject Subject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("EduNuke.SubjectBook", "Subject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("EduNuke.SubjectBook", "Subject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subject> SubjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("EduNuke.SubjectBook", "Subject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subject>("EduNuke.SubjectBook", "Subject", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Category CreateCategory(global::System.Int32 id, global::System.String name)
        {
            Category category = new Category();
            category.Id = id;
            category.Name = name;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 
        /// </summary>
        /// <LongDescription>
        /// Book, Laptop, etc
        /// </LongDescription>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "CategoryCategory", "Category1")]
        public EntityCollection<Category> Categories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Category>("EduNuke.CategoryCategory", "Category1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Category>("EduNuke.CategoryCategory", "Category1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "CategoryCategory", "Category")]
        public Category Parent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("EduNuke.CategoryCategory", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("EduNuke.CategoryCategory", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> ParentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("EduNuke.CategoryCategory", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("EduNuke.CategoryCategory", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "CategoryItem", "Item")]
        public EntityCollection<Item> Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Item>("EduNuke.CategoryItem", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Item>("EduNuke.CategoryItem", "Item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="College")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class College : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new College object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="contact">Initial value of the Contact property.</param>
        /// <param name="uIId">Initial value of the UIId property.</param>
        public static College CreateCollege(global::System.Int32 id, global::System.String name, Address address, ContactInfo contact, global::System.String uIId)
        {
            College college = new College();
            college.Id = id;
            college.Name = name;
            college.Address = StructuralObject.VerifyComplexObjectIsNotNull(address, "Address");
            college.Contact = StructuralObject.VerifyComplexObjectIsNotNull(contact, "Contact");
            college.UIId = uIId;
            return college;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String University
        {
            get
            {
                return _University;
            }
            set
            {
                OnUniversityChanging(value);
                ReportPropertyChanging("University");
                _University = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("University");
                OnUniversityChanged();
            }
        }
        private global::System.String _University;
        partial void OnUniversityChanging(global::System.String value);
        partial void OnUniversityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UIId
        {
            get
            {
                return _UIId;
            }
            set
            {
                OnUIIdChanging(value);
                ReportPropertyChanging("UIId");
                _UIId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UIId");
                OnUIIdChanged();
            }
        }
        private global::System.String _UIId;
        partial void OnUIIdChanging(global::System.String value);
        partial void OnUIIdChanged();

        #endregion
        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public Address Address
        {
            get
            {
                _Address = GetValidValue(_Address, "Address", false, _AddressInitialized);
                _AddressInitialized = true;
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = SetValidValue(_Address, value, "Address");
                _AddressInitialized = true;
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private Address _Address;
        private bool _AddressInitialized;
        partial void OnAddressChanging(Address value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public ContactInfo Contact
        {
            get
            {
                _Contact = GetValidValue(_Contact, "Contact", false, _ContactInitialized);
                _ContactInitialized = true;
                return _Contact;
            }
            set
            {
                OnContactChanging(value);
                ReportPropertyChanging("Contact");
                _Contact = SetValidValue(_Contact, value, "Contact");
                _ContactInitialized = true;
                ReportPropertyChanged("Contact");
                OnContactChanged();
            }
        }
        private ContactInfo _Contact;
        private bool _ContactInitialized;
        partial void OnContactChanging(ContactInfo value);
        partial void OnContactChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "CollegeDepartment", "Department")]
        public EntityCollection<Department> Departments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Department>("EduNuke.CollegeDepartment", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Department>("EduNuke.CollegeDepartment", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "InstituteGroupCollege", "InstituteGroup")]
        public InstituteGroup InstituteGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstituteGroup>("EduNuke.InstituteGroupCollege", "InstituteGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstituteGroup>("EduNuke.InstituteGroupCollege", "InstituteGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InstituteGroup> InstituteGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstituteGroup>("EduNuke.InstituteGroupCollege", "InstituteGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InstituteGroup>("EduNuke.InstituteGroupCollege", "InstituteGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "CollegeStore", "Store")]
        public EntityCollection<Store> Stores
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Store>("EduNuke.CollegeStore", "Store");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Store>("EduNuke.CollegeStore", "Store", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="Course")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Course : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Course object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="duration">Initial value of the Duration property.</param>
        public static Course CreateCourse(global::System.Int32 id, global::System.String name, global::System.Int32 duration)
        {
            Course course = new Course();
            course.Id = id;
            course.Name = name;
            course.Duration = duration;
            return course;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// B.Tech Computer Science
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private global::System.Int32 _Duration;
        partial void OnDurationChanging(global::System.Int32 value);
        partial void OnDurationChanged();
    
        /// <summary>
        /// 001
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "CourseSemesters", "Semesters")]
        public EntityCollection<Semester> Semesters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Semester>("EduNuke.CourseSemesters", "Semesters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Semester>("EduNuke.CourseSemesters", "Semesters", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "CourseBatch", "Batch")]
        public EntityCollection<Batch> Batches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Batch>("EduNuke.CourseBatch", "Batch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Batch>("EduNuke.CourseBatch", "Batch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "DepartmentCourse", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("EduNuke.DepartmentCourse", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("EduNuke.DepartmentCourse", "Department").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("EduNuke.DepartmentCourse", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("EduNuke.DepartmentCourse", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "CourseTypeCourse", "CourseType")]
        public CourseType CourseType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CourseType>("EduNuke.CourseTypeCourse", "CourseType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CourseType>("EduNuke.CourseTypeCourse", "CourseType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CourseType> CourseTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CourseType>("EduNuke.CourseTypeCourse", "CourseType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CourseType>("EduNuke.CourseTypeCourse", "CourseType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// BTech, MTech, etc
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="CourseType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CourseType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CourseType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static CourseType CreateCourseType(global::System.Int32 id, global::System.String name)
        {
            CourseType courseType = new CourseType();
            courseType.Id = id;
            courseType.Name = name;
            return courseType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "CourseTypeCourse", "Course")]
        public EntityCollection<Course> Courses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Course>("EduNuke.CourseTypeCourse", "Course");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Course>("EduNuke.CourseTypeCourse", "Course", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="DebitsCredits")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DebitsCredits : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DebitsCredits object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static DebitsCredits CreateDebitsCredits(global::System.Int32 id, global::System.Double amount, global::System.Boolean type)
        {
            DebitsCredits debitsCredits = new DebitsCredits();
            debitsCredits.Id = id;
            debitsCredits.Amount = amount;
            debitsCredits.Type = type;
            return debitsCredits;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Double _Amount;
        partial void OnAmountChanging(global::System.Double value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// 
        /// </summary>
        /// <LongDescription>
        /// Debit/Credit
        /// </LongDescription>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Boolean _Type;
        partial void OnTypeChanging(global::System.Boolean value);
        partial void OnTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "TransactionDebitsCredits", "Transaction")]
        public Transaction Transaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("EduNuke.TransactionDebitsCredits", "Transaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("EduNuke.TransactionDebitsCredits", "Transaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Transaction> TransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("EduNuke.TransactionDebitsCredits", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Transaction>("EduNuke.TransactionDebitsCredits", "Transaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "AccountDebitsCredits", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("EduNuke.AccountDebitsCredits", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("EduNuke.AccountDebitsCredits", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("EduNuke.AccountDebitsCredits", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("EduNuke.AccountDebitsCredits", "Account", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="Department")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Department : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Department object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Department CreateDepartment(global::System.Int32 id, global::System.String name)
        {
            Department department = new Department();
            department.Id = id;
            department.Name = name;
            return department;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Department of CSc
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// CSC
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MaxStrength
        {
            get
            {
                return _MaxStrength;
            }
            set
            {
                OnMaxStrengthChanging(value);
                ReportPropertyChanging("MaxStrength");
                _MaxStrength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxStrength");
                OnMaxStrengthChanged();
            }
        }
        private Nullable<global::System.Int32> _MaxStrength;
        partial void OnMaxStrengthChanging(Nullable<global::System.Int32> value);
        partial void OnMaxStrengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "CollegeDepartment", "College")]
        public College College
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<College>("EduNuke.CollegeDepartment", "College").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<College>("EduNuke.CollegeDepartment", "College").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<College> CollegeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<College>("EduNuke.CollegeDepartment", "College");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<College>("EduNuke.CollegeDepartment", "College", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "DepartmentSubjects", "Subjects")]
        public EntityCollection<Subject> Subjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Subject>("EduNuke.DepartmentSubjects", "Subjects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Subject>("EduNuke.DepartmentSubjects", "Subjects", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "DepartmentCourse", "Course")]
        public EntityCollection<Course> Courses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Course>("EduNuke.DepartmentCourse", "Course");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Course>("EduNuke.DepartmentCourse", "Course", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "DepartmentEmployee", "Employee")]
        public EntityCollection<Employee> Employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("EduNuke.DepartmentEmployee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("EduNuke.DepartmentEmployee", "Employee", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="Designation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Designation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Designation object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="responsibilities">Initial value of the Responsibilities property.</param>
        public static Designation CreateDesignation(global::System.Int32 id, global::System.String name, global::System.String responsibilities)
        {
            Designation designation = new Designation();
            designation.Id = id;
            designation.Name = name;
            designation.Responsibilities = responsibilities;
            return designation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Responsibilities
        {
            get
            {
                return _Responsibilities;
            }
            set
            {
                OnResponsibilitiesChanging(value);
                ReportPropertyChanging("Responsibilities");
                _Responsibilities = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Responsibilities");
                OnResponsibilitiesChanged();
            }
        }
        private global::System.String _Responsibilities;
        partial void OnResponsibilitiesChanging(global::System.String value);
        partial void OnResponsibilitiesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Role
        {
            get
            {
                return _Role;
            }
            set
            {
                OnRoleChanging(value);
                ReportPropertyChanging("Role");
                _Role = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Role");
                OnRoleChanged();
            }
        }
        private global::System.String _Role;
        partial void OnRoleChanging(global::System.String value);
        partial void OnRoleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "DesignationDesignation", "Designation1")]
        public EntityCollection<Designation> Designations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Designation>("EduNuke.DesignationDesignation", "Designation1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Designation>("EduNuke.DesignationDesignation", "Designation1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "DesignationDesignation", "Designation")]
        public Designation Inherits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Designation>("EduNuke.DesignationDesignation", "Designation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Designation>("EduNuke.DesignationDesignation", "Designation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Designation> InheritsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Designation>("EduNuke.DesignationDesignation", "Designation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Designation>("EduNuke.DesignationDesignation", "Designation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "DesignationEmployee", "Employee")]
        public EntityCollection<Employee> Employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("EduNuke.DesignationEmployee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("EduNuke.DesignationEmployee", "Employee", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="DocStore")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DocStore : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DocStore object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="mimeType">Initial value of the MimeType property.</param>
        /// <param name="data">Initial value of the Data property.</param>
        public static DocStore CreateDocStore(global::System.Int32 id, global::System.String name, global::System.String mimeType, global::System.Byte[] data)
        {
            DocStore docStore = new DocStore();
            docStore.Id = id;
            docStore.Name = name;
            docStore.MimeType = mimeType;
            docStore.Data = data;
            return docStore;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MimeType
        {
            get
            {
                return _MimeType;
            }
            set
            {
                OnMimeTypeChanging(value);
                ReportPropertyChanging("MimeType");
                _MimeType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MimeType");
                OnMimeTypeChanged();
            }
        }
        private global::System.String _MimeType;
        partial void OnMimeTypeChanging(global::System.String value);
        partial void OnMimeTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Data
        {
            get
            {
                return StructuralObject.GetValidValue(_Data);
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.Byte[] _Data;
        partial void OnDataChanging(global::System.Byte[] value);
        partial void OnDataChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "DocumentsDocStore", "Document")]
        public Document Document
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("EduNuke.DocumentsDocStore", "Document").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("EduNuke.DocumentsDocStore", "Document").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Document> DocumentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("EduNuke.DocumentsDocStore", "Document");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Document>("EduNuke.DocumentsDocStore", "Document", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="Document")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Document : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Document object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="mediaType">Initial value of the MediaType property.</param>
        /// <param name="fileName">Initial value of the FileName property.</param>
        /// <param name="location">Initial value of the Location property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="locationType">Initial value of the LocationType property.</param>
        public static Document CreateDocument(global::System.Int32 id, global::System.String mediaType, global::System.String fileName, global::System.String location, global::System.String name, global::System.String locationType)
        {
            Document document = new Document();
            document.Id = id;
            document.MediaType = mediaType;
            document.FileName = fileName;
            document.Location = location;
            document.Name = name;
            document.LocationType = locationType;
            return document;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Audio/Video/PDF
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MediaType
        {
            get
            {
                return _MediaType;
            }
            set
            {
                OnMediaTypeChanging(value);
                ReportPropertyChanging("MediaType");
                _MediaType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MediaType");
                OnMediaTypeChanged();
            }
        }
        private global::System.String _MediaType;
        partial void OnMediaTypeChanging(global::System.String value);
        partial void OnMediaTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UploadedDate
        {
            get
            {
                return _UploadedDate;
            }
            set
            {
                OnUploadedDateChanging(value);
                ReportPropertyChanging("UploadedDate");
                _UploadedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UploadedDate");
                OnUploadedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UploadedDate;
        partial void OnUploadedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUploadedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LocationType
        {
            get
            {
                return _LocationType;
            }
            set
            {
                OnLocationTypeChanging(value);
                ReportPropertyChanging("LocationType");
                _LocationType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LocationType");
                OnLocationTypeChanged();
            }
        }
        private global::System.String _LocationType;
        partial void OnLocationTypeChanging(global::System.String value);
        partial void OnLocationTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "UserDocuments", "User")]
        public User UploadedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EduNuke.UserDocuments", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EduNuke.UserDocuments", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UploadedByReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EduNuke.UserDocuments", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EduNuke.UserDocuments", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "DocumentsDocStore", "DocStore")]
        public DocStore DocStore
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocStore>("EduNuke.DocumentsDocStore", "DocStore").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocStore>("EduNuke.DocumentsDocStore", "DocStore").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DocStore> DocStoreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocStore>("EduNuke.DocumentsDocStore", "DocStore");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DocStore>("EduNuke.DocumentsDocStore", "DocStore", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="financialDetails">Initial value of the FinancialDetails property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static Employee CreateEmployee(global::System.Int32 id, FinancialDetails financialDetails, global::System.String status)
        {
            Employee employee = new Employee();
            employee.Id = id;
            employee.FinancialDetails = StructuralObject.VerifyComplexObjectIsNotNull(financialDetails, "FinancialDetails");
            employee.Status = status;
            return employee;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AppointmentLetterNo
        {
            get
            {
                return _AppointmentLetterNo;
            }
            set
            {
                OnAppointmentLetterNoChanging(value);
                ReportPropertyChanging("AppointmentLetterNo");
                _AppointmentLetterNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AppointmentLetterNo");
                OnAppointmentLetterNoChanged();
            }
        }
        private global::System.String _AppointmentLetterNo;
        partial void OnAppointmentLetterNoChanging(global::System.String value);
        partial void OnAppointmentLetterNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AreaOfSpecialization
        {
            get
            {
                return _AreaOfSpecialization;
            }
            set
            {
                OnAreaOfSpecializationChanging(value);
                ReportPropertyChanging("AreaOfSpecialization");
                _AreaOfSpecialization = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AreaOfSpecialization");
                OnAreaOfSpecializationChanged();
            }
        }
        private global::System.String _AreaOfSpecialization;
        partial void OnAreaOfSpecializationChanging(global::System.String value);
        partial void OnAreaOfSpecializationChanged();
    
        /// <summary>
        /// Admin/Faculty/LabAssistant
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmployeeNo
        {
            get
            {
                return _EmployeeNo;
            }
            set
            {
                OnEmployeeNoChanging(value);
                ReportPropertyChanging("EmployeeNo");
                _EmployeeNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeNo");
                OnEmployeeNoChanged();
            }
        }
        private Nullable<global::System.Int32> _EmployeeNo;
        partial void OnEmployeeNoChanging(Nullable<global::System.Int32> value);
        partial void OnEmployeeNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion
        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public FinancialDetails FinancialDetails
        {
            get
            {
                _FinancialDetails = GetValidValue(_FinancialDetails, "FinancialDetails", false, _FinancialDetailsInitialized);
                _FinancialDetailsInitialized = true;
                return _FinancialDetails;
            }
            set
            {
                OnFinancialDetailsChanging(value);
                ReportPropertyChanging("FinancialDetails");
                _FinancialDetails = SetValidValue(_FinancialDetails, value, "FinancialDetails");
                _FinancialDetailsInitialized = true;
                ReportPropertyChanged("FinancialDetails");
                OnFinancialDetailsChanged();
            }
        }
        private FinancialDetails _FinancialDetails;
        private bool _FinancialDetailsInitialized;
        partial void OnFinancialDetailsChanging(FinancialDetails value);
        partial void OnFinancialDetailsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "UserEmployee", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EduNuke.UserEmployee", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EduNuke.UserEmployee", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EduNuke.UserEmployee", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EduNuke.UserEmployee", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "EmployeeReportingOfficer", "ReportingOfficer")]
        public EntityCollection<Employee> Employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("EduNuke.EmployeeReportingOfficer", "ReportingOfficer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("EduNuke.EmployeeReportingOfficer", "ReportingOfficer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "EmployeeReportingOfficer", "Employee")]
        public Employee ReportingOfficer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("EduNuke.EmployeeReportingOfficer", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("EduNuke.EmployeeReportingOfficer", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> ReportingOfficerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("EduNuke.EmployeeReportingOfficer", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("EduNuke.EmployeeReportingOfficer", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "DepartmentEmployee", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("EduNuke.DepartmentEmployee", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("EduNuke.DepartmentEmployee", "Department").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("EduNuke.DepartmentEmployee", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("EduNuke.DepartmentEmployee", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "EmployeeSubjectInstance", "SubjectInstance")]
        public EntityCollection<SubjectInstance> SubjectInstances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubjectInstance>("EduNuke.EmployeeSubjectInstance", "SubjectInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubjectInstance>("EduNuke.EmployeeSubjectInstance", "SubjectInstance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "DesignationEmployee", "Designation")]
        public Designation Designation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Designation>("EduNuke.DesignationEmployee", "Designation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Designation>("EduNuke.DesignationEmployee", "Designation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Designation> DesignationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Designation>("EduNuke.DesignationEmployee", "Designation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Designation>("EduNuke.DesignationEmployee", "Designation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="Event")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Event : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Event object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="eventType">Initial value of the EventType property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="duration">Initial value of the Duration property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="remarks">Initial value of the Remarks property.</param>
        /// <param name="topic">Initial value of the Topic property.</param>
        public static Event CreateEvent(global::System.Int32 id, global::System.String eventType, global::System.DateTime startTime, global::System.String duration, global::System.String status, global::System.String remarks, global::System.String topic)
        {
            Event @event = new Event();
            @event.Id = id;
            @event.EventType = eventType;
            @event.StartTime = startTime;
            @event.Duration = duration;
            @event.Status = status;
            @event.Remarks = remarks;
            @event.Topic = topic;
            return @event;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Lecutures/Seminars/Labs
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventType
        {
            get
            {
                return _EventType;
            }
            set
            {
                OnEventTypeChanging(value);
                ReportPropertyChanging("EventType");
                _EventType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EventType");
                OnEventTypeChanged();
            }
        }
        private global::System.String _EventType;
        partial void OnEventTypeChanging(global::System.String value);
        partial void OnEventTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.DateTime _StartTime;
        partial void OnStartTimeChanging(global::System.DateTime value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private global::System.String _Duration;
        partial void OnDurationChanging(global::System.String value);
        partial void OnDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Topic
        {
            get
            {
                return _Topic;
            }
            set
            {
                OnTopicChanging(value);
                ReportPropertyChanging("Topic");
                _Topic = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Topic");
                OnTopicChanged();
            }
        }
        private global::System.String _Topic;
        partial void OnTopicChanging(global::System.String value);
        partial void OnTopicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Reminder
        {
            get
            {
                return _Reminder;
            }
            set
            {
                OnReminderChanging(value);
                ReportPropertyChanging("Reminder");
                _Reminder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Reminder");
                OnReminderChanged();
            }
        }
        private Nullable<global::System.Int32> _Reminder;
        partial void OnReminderChanging(Nullable<global::System.Int32> value);
        partial void OnReminderChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "EventAttendance", "Attendance")]
        public EntityCollection<Attendance> Attendances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Attendance>("EduNuke.EventAttendance", "Attendance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Attendance>("EduNuke.EventAttendance", "Attendance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "SubjectInstanceEvent", "SubjectInstance")]
        public SubjectInstance SubjectInstance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubjectInstance>("EduNuke.SubjectInstanceEvent", "SubjectInstance").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubjectInstance>("EduNuke.SubjectInstanceEvent", "SubjectInstance").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubjectInstance> SubjectInstanceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubjectInstance>("EduNuke.SubjectInstanceEvent", "SubjectInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubjectInstance>("EduNuke.SubjectInstanceEvent", "SubjectInstance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "LocationEvent", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("EduNuke.LocationEvent", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("EduNuke.LocationEvent", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("EduNuke.LocationEvent", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("EduNuke.LocationEvent", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "EventExam", "Exam")]
        public Exam Exam
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Exam>("EduNuke.EventExam", "Exam").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Exam>("EduNuke.EventExam", "Exam").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Exam> ExamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Exam>("EduNuke.EventExam", "Exam");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Exam>("EduNuke.EventExam", "Exam", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="Exam")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Exam : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Exam object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="examType">Initial value of the ExamType property.</param>
        /// <param name="maxMarks">Initial value of the MaxMarks property.</param>
        public static Exam CreateExam(global::System.Int32 id, global::System.String examType, global::System.Int32 maxMarks)
        {
            Exam exam = new Exam();
            exam.Id = id;
            exam.ExamType = examType;
            exam.MaxMarks = maxMarks;
            return exam;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Sessional1, sessional 2, sessional 3, External, Labs, Behavioural
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExamType
        {
            get
            {
                return _ExamType;
            }
            set
            {
                OnExamTypeChanging(value);
                ReportPropertyChanging("ExamType");
                _ExamType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ExamType");
                OnExamTypeChanged();
            }
        }
        private global::System.String _ExamType;
        partial void OnExamTypeChanging(global::System.String value);
        partial void OnExamTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaxMarks
        {
            get
            {
                return _MaxMarks;
            }
            set
            {
                OnMaxMarksChanging(value);
                ReportPropertyChanging("MaxMarks");
                _MaxMarks = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxMarks");
                OnMaxMarksChanged();
            }
        }
        private global::System.Int32 _MaxMarks;
        partial void OnMaxMarksChanging(global::System.Int32 value);
        partial void OnMaxMarksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PassingMarks
        {
            get
            {
                return _PassingMarks;
            }
            set
            {
                OnPassingMarksChanging(value);
                ReportPropertyChanging("PassingMarks");
                _PassingMarks = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PassingMarks");
                OnPassingMarksChanged();
            }
        }
        private Nullable<global::System.Int32> _PassingMarks;
        partial void OnPassingMarksChanging(Nullable<global::System.Int32> value);
        partial void OnPassingMarksChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "ExamResult", "Result")]
        public EntityCollection<Result> Results
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Result>("EduNuke.ExamResult", "Result");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Result>("EduNuke.ExamResult", "Result", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "SubjectExam", "Subject")]
        public Subject Subject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("EduNuke.SubjectExam", "Subject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("EduNuke.SubjectExam", "Subject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subject> SubjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("EduNuke.SubjectExam", "Subject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subject>("EduNuke.SubjectExam", "Subject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "DocumentsExam", "Documents")]
        public Document QuestionPaper
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("EduNuke.DocumentsExam", "Documents").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("EduNuke.DocumentsExam", "Documents").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Document> QuestionPaperReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("EduNuke.DocumentsExam", "Documents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Document>("EduNuke.DocumentsExam", "Documents", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "EventExam", "Event")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EduNuke.EventExam", "Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EduNuke.EventExam", "Event").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EduNuke.EventExam", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("EduNuke.EventExam", "Event", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="Experience")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Experience : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Experience object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="employer">Initial value of the Employer property.</param>
        /// <param name="joiningDate">Initial value of the JoiningDate property.</param>
        public static Experience CreateExperience(global::System.Int32 id, global::System.String employer, global::System.DateTime joiningDate)
        {
            Experience experience = new Experience();
            experience.Id = id;
            experience.Employer = employer;
            experience.JoiningDate = joiningDate;
            return experience;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Employer
        {
            get
            {
                return _Employer;
            }
            set
            {
                OnEmployerChanging(value);
                ReportPropertyChanging("Employer");
                _Employer = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Employer");
                OnEmployerChanged();
            }
        }
        private global::System.String _Employer;
        partial void OnEmployerChanging(global::System.String value);
        partial void OnEmployerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime JoiningDate
        {
            get
            {
                return _JoiningDate;
            }
            set
            {
                OnJoiningDateChanging(value);
                ReportPropertyChanging("JoiningDate");
                _JoiningDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JoiningDate");
                OnJoiningDateChanged();
            }
        }
        private global::System.DateTime _JoiningDate;
        partial void OnJoiningDateChanging(global::System.DateTime value);
        partial void OnJoiningDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastDate
        {
            get
            {
                return _LastDate;
            }
            set
            {
                OnLastDateChanging(value);
                ReportPropertyChanging("LastDate");
                _LastDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastDate");
                OnLastDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastDate;
        partial void OnLastDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastSalary
        {
            get
            {
                return _LastSalary;
            }
            set
            {
                OnLastSalaryChanging(value);
                ReportPropertyChanging("LastSalary");
                _LastSalary = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastSalary");
                OnLastSalaryChanged();
            }
        }
        private global::System.String _LastSalary;
        partial void OnLastSalaryChanging(global::System.String value);
        partial void OnLastSalaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JoiningSalary
        {
            get
            {
                return _JoiningSalary;
            }
            set
            {
                OnJoiningSalaryChanging(value);
                ReportPropertyChanging("JoiningSalary");
                _JoiningSalary = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JoiningSalary");
                OnJoiningSalaryChanged();
            }
        }
        private global::System.String _JoiningSalary;
        partial void OnJoiningSalaryChanging(global::System.String value);
        partial void OnJoiningSalaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Designation
        {
            get
            {
                return _Designation;
            }
            set
            {
                OnDesignationChanging(value);
                ReportPropertyChanging("Designation");
                _Designation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Designation");
                OnDesignationChanged();
            }
        }
        private global::System.String _Designation;
        partial void OnDesignationChanging(global::System.String value);
        partial void OnDesignationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsCurrent
        {
            get
            {
                return _IsCurrent;
            }
            set
            {
                OnIsCurrentChanging(value);
                ReportPropertyChanging("IsCurrent");
                _IsCurrent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCurrent");
                OnIsCurrentChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsCurrent;
        partial void OnIsCurrentChanging(Nullable<global::System.Boolean> value);
        partial void OnIsCurrentChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "UserExperience", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EduNuke.UserExperience", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EduNuke.UserExperience", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EduNuke.UserExperience", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EduNuke.UserExperience", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="GlobalAudit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GlobalAudit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GlobalAudit object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="tableName">Initial value of the TableName property.</param>
        /// <param name="columnName">Initial value of the ColumnName property.</param>
        /// <param name="oldValue">Initial value of the OldValue property.</param>
        /// <param name="newValue">Initial value of the NewValue property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="operation">Initial value of the Operation property.</param>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        public static GlobalAudit CreateGlobalAudit(global::System.Int32 id, global::System.String tableName, global::System.String columnName, global::System.String oldValue, global::System.String newValue, global::System.String createdBy, global::System.DateTime createdDate, global::System.String operation, global::System.String applicationId)
        {
            GlobalAudit globalAudit = new GlobalAudit();
            globalAudit.Id = id;
            globalAudit.TableName = tableName;
            globalAudit.ColumnName = columnName;
            globalAudit.OldValue = oldValue;
            globalAudit.NewValue = newValue;
            globalAudit.CreatedBy = createdBy;
            globalAudit.CreatedDate = createdDate;
            globalAudit.Operation = operation;
            globalAudit.ApplicationId = applicationId;
            return globalAudit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TableName
        {
            get
            {
                return _TableName;
            }
            set
            {
                OnTableNameChanging(value);
                ReportPropertyChanging("TableName");
                _TableName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TableName");
                OnTableNameChanged();
            }
        }
        private global::System.String _TableName;
        partial void OnTableNameChanging(global::System.String value);
        partial void OnTableNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ColumnName
        {
            get
            {
                return _ColumnName;
            }
            set
            {
                OnColumnNameChanging(value);
                ReportPropertyChanging("ColumnName");
                _ColumnName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ColumnName");
                OnColumnNameChanged();
            }
        }
        private global::System.String _ColumnName;
        partial void OnColumnNameChanging(global::System.String value);
        partial void OnColumnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OldValue
        {
            get
            {
                return _OldValue;
            }
            set
            {
                OnOldValueChanging(value);
                ReportPropertyChanging("OldValue");
                _OldValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OldValue");
                OnOldValueChanged();
            }
        }
        private global::System.String _OldValue;
        partial void OnOldValueChanging(global::System.String value);
        partial void OnOldValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NewValue
        {
            get
            {
                return _NewValue;
            }
            set
            {
                OnNewValueChanging(value);
                ReportPropertyChanging("NewValue");
                _NewValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NewValue");
                OnNewValueChanged();
            }
        }
        private global::System.String _NewValue;
        partial void OnNewValueChanging(global::System.String value);
        partial void OnNewValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Operation
        {
            get
            {
                return _Operation;
            }
            set
            {
                OnOperationChanging(value);
                ReportPropertyChanging("Operation");
                _Operation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Operation");
                OnOperationChanged();
            }
        }
        private global::System.String _Operation;
        partial void OnOperationChanging(global::System.String value);
        partial void OnOperationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.String _ApplicationId;
        partial void OnApplicationIdChanging(global::System.String value);
        partial void OnApplicationIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="InstituteGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InstituteGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InstituteGroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="lastEmployeeNo">Initial value of the LastEmployeeNo property.</param>
        /// <param name="lastTransactionNo">Initial value of the LastTransactionNo property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static InstituteGroup CreateInstituteGroup(global::System.Int32 id, global::System.Int32 lastEmployeeNo, global::System.Int32 lastTransactionNo, global::System.String name)
        {
            InstituteGroup instituteGroup = new InstituteGroup();
            instituteGroup.Id = id;
            instituteGroup.LastEmployeeNo = lastEmployeeNo;
            instituteGroup.LastTransactionNo = lastTransactionNo;
            instituteGroup.Name = name;
            return instituteGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 
        /// </summary>
        /// <LongDescription>
        /// Employee belongs to the Group which acts as a company
        /// </LongDescription>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LastEmployeeNo
        {
            get
            {
                return _LastEmployeeNo;
            }
            set
            {
                OnLastEmployeeNoChanging(value);
                ReportPropertyChanging("LastEmployeeNo");
                _LastEmployeeNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastEmployeeNo");
                OnLastEmployeeNoChanged();
            }
        }
        private global::System.Int32 _LastEmployeeNo;
        partial void OnLastEmployeeNoChanging(global::System.Int32 value);
        partial void OnLastEmployeeNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LastTransactionNo
        {
            get
            {
                return _LastTransactionNo;
            }
            set
            {
                OnLastTransactionNoChanging(value);
                ReportPropertyChanging("LastTransactionNo");
                _LastTransactionNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastTransactionNo");
                OnLastTransactionNoChanged();
            }
        }
        private global::System.Int32 _LastTransactionNo;
        partial void OnLastTransactionNoChanging(global::System.Int32 value);
        partial void OnLastTransactionNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "InstituteGroupCollege", "College")]
        public EntityCollection<College> Colleges
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<College>("EduNuke.InstituteGroupCollege", "College");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<College>("EduNuke.InstituteGroupCollege", "College", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "InstituteGroupTransaction", "Transaction")]
        public EntityCollection<Transaction> Transactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transaction>("EduNuke.InstituteGroupTransaction", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transaction>("EduNuke.InstituteGroupTransaction", "Transaction", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="IssueDetails")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IssueDetails : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IssueDetails object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="dateofIssue">Initial value of the DateofIssue property.</param>
        public static IssueDetails CreateIssueDetails(global::System.Int32 id, global::System.DateTime dateofIssue)
        {
            IssueDetails issueDetails = new IssueDetails();
            issueDetails.Id = id;
            issueDetails.DateofIssue = dateofIssue;
            return issueDetails;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateofIssue
        {
            get
            {
                return _DateofIssue;
            }
            set
            {
                OnDateofIssueChanging(value);
                ReportPropertyChanging("DateofIssue");
                _DateofIssue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateofIssue");
                OnDateofIssueChanged();
            }
        }
        private global::System.DateTime _DateofIssue;
        partial void OnDateofIssueChanging(global::System.DateTime value);
        partial void OnDateofIssueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOfReturn
        {
            get
            {
                return _DateOfReturn;
            }
            set
            {
                OnDateOfReturnChanging(value);
                ReportPropertyChanging("DateOfReturn");
                _DateOfReturn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfReturn");
                OnDateOfReturnChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOfReturn;
        partial void OnDateOfReturnChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOfReturnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "ItemIssueDetails", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("EduNuke.ItemIssueDetails", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("EduNuke.ItemIssueDetails", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("EduNuke.ItemIssueDetails", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("EduNuke.ItemIssueDetails", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "UserIssueDetails", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EduNuke.UserIssueDetails", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EduNuke.UserIssueDetails", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EduNuke.UserIssueDetails", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EduNuke.UserIssueDetails", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Book))]
    public partial class Item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Item object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Item CreateItem(global::System.Int32 id)
        {
            Item item = new Item();
            item.Id = id;
            return item;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Int32> _Price;
        partial void OnPriceChanging(Nullable<global::System.Int32> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BarCode
        {
            get
            {
                return _BarCode;
            }
            set
            {
                OnBarCodeChanging(value);
                ReportPropertyChanging("BarCode");
                _BarCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BarCode");
                OnBarCodeChanged();
            }
        }
        private global::System.String _BarCode;
        partial void OnBarCodeChanging(global::System.String value);
        partial void OnBarCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "ItemIssueDetails", "IssueDetails")]
        public EntityCollection<IssueDetails> IssueDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IssueDetails>("EduNuke.ItemIssueDetails", "IssueDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IssueDetails>("EduNuke.ItemIssueDetails", "IssueDetails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "ItemItemRequisition", "ItemRequisition")]
        public EntityCollection<ItemRequisition> ItemRequisitions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemRequisition>("EduNuke.ItemItemRequisition", "ItemRequisition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemRequisition>("EduNuke.ItemItemRequisition", "ItemRequisition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "ItemStock", "Stock")]
        public EntityCollection<Stock> Stocks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Stock>("EduNuke.ItemStock", "Stock");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Stock>("EduNuke.ItemStock", "Stock", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "ItemItemSale", "ItemSale")]
        public EntityCollection<ItemSale> ItemSales
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemSale>("EduNuke.ItemItemSale", "ItemSale");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemSale>("EduNuke.ItemItemSale", "ItemSale", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "CategoryItem", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("EduNuke.CategoryItem", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("EduNuke.CategoryItem", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("EduNuke.CategoryItem", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("EduNuke.CategoryItem", "Category", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="ItemRequisition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemRequisition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemRequisition object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="receivedQuantity">Initial value of the ReceivedQuantity property.</param>
        /// <param name="dateOfRequisition">Initial value of the DateOfRequisition property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="requestedQuantity">Initial value of the RequestedQuantity property.</param>
        /// <param name="requistionNo">Initial value of the RequistionNo property.</param>
        public static ItemRequisition CreateItemRequisition(global::System.Int32 id, global::System.Int32 receivedQuantity, global::System.DateTime dateOfRequisition, global::System.String status, global::System.Int32 requestedQuantity, global::System.String requistionNo)
        {
            ItemRequisition itemRequisition = new ItemRequisition();
            itemRequisition.Id = id;
            itemRequisition.ReceivedQuantity = receivedQuantity;
            itemRequisition.DateOfRequisition = dateOfRequisition;
            itemRequisition.Status = status;
            itemRequisition.RequestedQuantity = requestedQuantity;
            itemRequisition.RequistionNo = requistionNo;
            return itemRequisition;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReceivedQuantity
        {
            get
            {
                return _ReceivedQuantity;
            }
            set
            {
                OnReceivedQuantityChanging(value);
                ReportPropertyChanging("ReceivedQuantity");
                _ReceivedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceivedQuantity");
                OnReceivedQuantityChanged();
            }
        }
        private global::System.Int32 _ReceivedQuantity;
        partial void OnReceivedQuantityChanging(global::System.Int32 value);
        partial void OnReceivedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfRequisition
        {
            get
            {
                return _DateOfRequisition;
            }
            set
            {
                OnDateOfRequisitionChanging(value);
                ReportPropertyChanging("DateOfRequisition");
                _DateOfRequisition = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfRequisition");
                OnDateOfRequisitionChanged();
            }
        }
        private global::System.DateTime _DateOfRequisition;
        partial void OnDateOfRequisitionChanging(global::System.DateTime value);
        partial void OnDateOfRequisitionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reason
        {
            get
            {
                return _Reason;
            }
            set
            {
                OnReasonChanging(value);
                ReportPropertyChanging("Reason");
                _Reason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Reason");
                OnReasonChanged();
            }
        }
        private global::System.String _Reason;
        partial void OnReasonChanging(global::System.String value);
        partial void OnReasonChanged();
    
        /// <summary>
        /// 
        /// </summary>
        /// <LongDescription>
        /// New, InProgress, Closed
        /// </LongDescription>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RequestedQuantity
        {
            get
            {
                return _RequestedQuantity;
            }
            set
            {
                OnRequestedQuantityChanging(value);
                ReportPropertyChanging("RequestedQuantity");
                _RequestedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestedQuantity");
                OnRequestedQuantityChanged();
            }
        }
        private global::System.Int32 _RequestedQuantity;
        partial void OnRequestedQuantityChanging(global::System.Int32 value);
        partial void OnRequestedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReceivedDate
        {
            get
            {
                return _ReceivedDate;
            }
            set
            {
                OnReceivedDateChanging(value);
                ReportPropertyChanging("ReceivedDate");
                _ReceivedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceivedDate");
                OnReceivedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReceivedDate;
        partial void OnReceivedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnReceivedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// 
        /// </summary>
        /// <LongDescription>
        /// Unique for a group - StoreCode + No
        /// </LongDescription>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RequistionNo
        {
            get
            {
                return _RequistionNo;
            }
            set
            {
                OnRequistionNoChanging(value);
                ReportPropertyChanging("RequistionNo");
                _RequistionNo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RequistionNo");
                OnRequistionNoChanged();
            }
        }
        private global::System.String _RequistionNo;
        partial void OnRequistionNoChanging(global::System.String value);
        partial void OnRequistionNoChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "ItemItemRequisition", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("EduNuke.ItemItemRequisition", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("EduNuke.ItemItemRequisition", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("EduNuke.ItemItemRequisition", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("EduNuke.ItemItemRequisition", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "UserItemRequisition", "User")]
        public User RaisedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EduNuke.UserItemRequisition", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EduNuke.UserItemRequisition", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> RaisedByReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EduNuke.UserItemRequisition", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EduNuke.UserItemRequisition", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "StoreItemRequisition", "Store")]
        public Store Store
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("EduNuke.StoreItemRequisition", "Store").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("EduNuke.StoreItemRequisition", "Store").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Store> StoreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("EduNuke.StoreItemRequisition", "Store");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Store>("EduNuke.StoreItemRequisition", "Store", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="ItemSale")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemSale : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemSale object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="saleDate">Initial value of the SaleDate property.</param>
        /// <param name="saleNo">Initial value of the SaleNo property.</param>
        public static ItemSale CreateItemSale(global::System.Int32 id, global::System.String type, global::System.Int32 quantity, global::System.DateTime saleDate, global::System.String saleNo)
        {
            ItemSale itemSale = new ItemSale();
            itemSale.Id = id;
            itemSale.Type = type;
            itemSale.Quantity = quantity;
            itemSale.SaleDate = saleDate;
            itemSale.SaleNo = saleNo;
            return itemSale;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 
        /// </summary>
        /// <LongDescription>
        /// Damaged, Sold, etc
        /// </LongDescription>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SaleDate
        {
            get
            {
                return _SaleDate;
            }
            set
            {
                OnSaleDateChanging(value);
                ReportPropertyChanging("SaleDate");
                _SaleDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SaleDate");
                OnSaleDateChanged();
            }
        }
        private global::System.DateTime _SaleDate;
        partial void OnSaleDateChanging(global::System.DateTime value);
        partial void OnSaleDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SaleNo
        {
            get
            {
                return _SaleNo;
            }
            set
            {
                OnSaleNoChanging(value);
                ReportPropertyChanging("SaleNo");
                _SaleNo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SaleNo");
                OnSaleNoChanged();
            }
        }
        private global::System.String _SaleNo;
        partial void OnSaleNoChanging(global::System.String value);
        partial void OnSaleNoChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "ItemItemSale", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("EduNuke.ItemItemSale", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("EduNuke.ItemItemSale", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("EduNuke.ItemItemSale", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("EduNuke.ItemItemSale", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "StoreItemSale", "Store")]
        public Store Store
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("EduNuke.StoreItemSale", "Store").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("EduNuke.StoreItemSale", "Store").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Store> StoreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("EduNuke.StoreItemSale", "Store");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Store>("EduNuke.StoreItemSale", "Store", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="Location")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Location : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Location object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="capacity">Initial value of the Capacity property.</param>
        /// <param name="hasProjector">Initial value of the HasProjector property.</param>
        public static Location CreateLocation(global::System.Int32 id, global::System.String code, global::System.String description, global::System.Int32 capacity, global::System.Boolean hasProjector)
        {
            Location location = new Location();
            location.Id = id;
            location.Code = code;
            location.Description = description;
            location.Capacity = capacity;
            location.HasProjector = hasProjector;
            return location;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Capacity
        {
            get
            {
                return _Capacity;
            }
            set
            {
                OnCapacityChanging(value);
                ReportPropertyChanging("Capacity");
                _Capacity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Capacity");
                OnCapacityChanged();
            }
        }
        private global::System.Int32 _Capacity;
        partial void OnCapacityChanging(global::System.Int32 value);
        partial void OnCapacityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasProjector
        {
            get
            {
                return _HasProjector;
            }
            set
            {
                OnHasProjectorChanging(value);
                ReportPropertyChanging("HasProjector");
                _HasProjector = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasProjector");
                OnHasProjectorChanged();
            }
        }
        private global::System.Boolean _HasProjector;
        partial void OnHasProjectorChanging(global::System.Boolean value);
        partial void OnHasProjectorChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "LocationEvent", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("EduNuke.LocationEvent", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("EduNuke.LocationEvent", "Event", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="Qualification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Qualification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Qualification object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="school">Initial value of the School property.</param>
        /// <param name="yearOfPassing">Initial value of the YearOfPassing property.</param>
        /// <param name="courseType">Initial value of the CourseType property.</param>
        /// <param name="score">Initial value of the Score property.</param>
        public static Qualification CreateQualification(global::System.Int32 id, global::System.String school, global::System.String yearOfPassing, global::System.String courseType, global::System.String score)
        {
            Qualification qualification = new Qualification();
            qualification.Id = id;
            qualification.School = school;
            qualification.YearOfPassing = yearOfPassing;
            qualification.CourseType = courseType;
            qualification.Score = score;
            return qualification;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String School
        {
            get
            {
                return _School;
            }
            set
            {
                OnSchoolChanging(value);
                ReportPropertyChanging("School");
                _School = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("School");
                OnSchoolChanged();
            }
        }
        private global::System.String _School;
        partial void OnSchoolChanging(global::System.String value);
        partial void OnSchoolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String YearOfPassing
        {
            get
            {
                return _YearOfPassing;
            }
            set
            {
                OnYearOfPassingChanging(value);
                ReportPropertyChanging("YearOfPassing");
                _YearOfPassing = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("YearOfPassing");
                OnYearOfPassingChanged();
            }
        }
        private global::System.String _YearOfPassing;
        partial void OnYearOfPassingChanging(global::System.String value);
        partial void OnYearOfPassingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CourseType
        {
            get
            {
                return _CourseType;
            }
            set
            {
                OnCourseTypeChanging(value);
                ReportPropertyChanging("CourseType");
                _CourseType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CourseType");
                OnCourseTypeChanged();
            }
        }
        private global::System.String _CourseType;
        partial void OnCourseTypeChanging(global::System.String value);
        partial void OnCourseTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private global::System.String _Score;
        partial void OnScoreChanging(global::System.String value);
        partial void OnScoreChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "UserQualification", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EduNuke.UserQualification", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EduNuke.UserQualification", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EduNuke.UserQualification", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EduNuke.UserQualification", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="Result")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Result : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Result object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="score">Initial value of the Score property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static Result CreateResult(global::System.Int32 id, global::System.Double score, global::System.Boolean status)
        {
            Result result = new Result();
            result.Id = id;
            result.Score = score;
            result.Status = status;
            return result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private global::System.Double _Score;
        partial void OnScoreChanging(global::System.Double value);
        partial void OnScoreChanged();
    
        /// <summary>
        /// Pass/Fail/
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Boolean _Status;
        partial void OnStatusChanging(global::System.Boolean value);
        partial void OnStatusChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "StudentResult", "Student")]
        public Student Student
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("EduNuke.StudentResult", "Student").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("EduNuke.StudentResult", "Student").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Student> StudentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("EduNuke.StudentResult", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Student>("EduNuke.StudentResult", "Student", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "ExamResult", "Exam")]
        public Exam Exam
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Exam>("EduNuke.ExamResult", "Exam").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Exam>("EduNuke.ExamResult", "Exam").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Exam> ExamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Exam>("EduNuke.ExamResult", "Exam");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Exam>("EduNuke.ExamResult", "Exam", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="Route")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Route : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Route object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Route CreateRoute(global::System.Int32 id)
        {
            Route route = new Route();
            route.Id = id;
            return route;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartTime;
        partial void OnStartTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RouteLength
        {
            get
            {
                return _RouteLength;
            }
            set
            {
                OnRouteLengthChanging(value);
                ReportPropertyChanging("RouteLength");
                _RouteLength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RouteLength");
                OnRouteLengthChanged();
            }
        }
        private Nullable<global::System.Int32> _RouteLength;
        partial void OnRouteLengthChanging(Nullable<global::System.Int32> value);
        partial void OnRouteLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "RouteSpot", "Spot")]
        public EntityCollection<Spot> Spots
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Spot>("EduNuke.RouteSpot", "Spot");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Spot>("EduNuke.RouteSpot", "Spot", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "RouteVehicle", "Vehicle")]
        public EntityCollection<Vehicle> Vehicles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Vehicle>("EduNuke.RouteVehicle", "Vehicle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Vehicle>("EduNuke.RouteVehicle", "Vehicle", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="Section")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Section : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Section object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="maxStrength">Initial value of the MaxStrength property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        public static Section CreateSection(global::System.Int32 id, global::System.String name, global::System.Int32 maxStrength, global::System.String code)
        {
            Section section = new Section();
            section.Id = id;
            section.Name = name;
            section.MaxStrength = maxStrength;
            section.Code = code;
            return section;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaxStrength
        {
            get
            {
                return _MaxStrength;
            }
            set
            {
                OnMaxStrengthChanging(value);
                ReportPropertyChanging("MaxStrength");
                _MaxStrength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxStrength");
                OnMaxStrengthChanged();
            }
        }
        private global::System.Int32 _MaxStrength;
        partial void OnMaxStrengthChanging(global::System.Int32 value);
        partial void OnMaxStrengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "BatchSection", "Batch")]
        public Batch Batch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Batch>("EduNuke.BatchSection", "Batch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Batch>("EduNuke.BatchSection", "Batch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Batch> BatchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Batch>("EduNuke.BatchSection", "Batch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Batch>("EduNuke.BatchSection", "Batch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "SectionStudent", "Student")]
        public EntityCollection<Student> Students
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Student>("EduNuke.SectionStudent", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Student>("EduNuke.SectionStudent", "Student", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="Semester")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Semester : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Semester object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static Semester CreateSemester(global::System.Int32 id, global::System.String name, global::System.DateTime startDate, global::System.DateTime endDate, global::System.String status)
        {
            Semester semester = new Semester();
            semester.Id = id;
            semester.Name = name;
            semester.StartDate = startDate;
            semester.EndDate = endDate;
            semester.Status = status;
            return semester;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "CourseSemesters", "Course")]
        public Course Course
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("EduNuke.CourseSemesters", "Course").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("EduNuke.CourseSemesters", "Course").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Course> CourseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Course>("EduNuke.CourseSemesters", "Course");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Course>("EduNuke.CourseSemesters", "Course", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "SemestersSubject", "Subject")]
        public EntityCollection<Subject> Subjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Subject>("EduNuke.SemestersSubject", "Subject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Subject>("EduNuke.SemestersSubject", "Subject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "BatchSemesters", "Batch")]
        public Batch Batch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Batch>("EduNuke.BatchSemesters", "Batch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Batch>("EduNuke.BatchSemesters", "Batch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Batch> BatchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Batch>("EduNuke.BatchSemesters", "Batch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Batch>("EduNuke.BatchSemesters", "Batch", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="Spot")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Spot : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Spot object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="stopName">Initial value of the StopName property.</param>
        /// <param name="position">Initial value of the Position property.</param>
        public static Spot CreateSpot(global::System.Int32 id, global::System.String stopName, Position position)
        {
            Spot spot = new Spot();
            spot.Id = id;
            spot.StopName = stopName;
            spot.Position = StructuralObject.VerifyComplexObjectIsNotNull(position, "Position");
            return spot;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StopName
        {
            get
            {
                return _StopName;
            }
            set
            {
                OnStopNameChanging(value);
                ReportPropertyChanging("StopName");
                _StopName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StopName");
                OnStopNameChanged();
            }
        }
        private global::System.String _StopName;
        partial void OnStopNameChanging(global::System.String value);
        partial void OnStopNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Area
        {
            get
            {
                return _Area;
            }
            set
            {
                OnAreaChanging(value);
                ReportPropertyChanging("Area");
                _Area = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Area");
                OnAreaChanged();
            }
        }
        private global::System.String _Area;
        partial void OnAreaChanging(global::System.String value);
        partial void OnAreaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ArrivalTime
        {
            get
            {
                return _ArrivalTime;
            }
            set
            {
                OnArrivalTimeChanging(value);
                ReportPropertyChanging("ArrivalTime");
                _ArrivalTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ArrivalTime");
                OnArrivalTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _ArrivalTime;
        partial void OnArrivalTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnArrivalTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public Position Position
        {
            get
            {
                _Position = GetValidValue(_Position, "Position", false, _PositionInitialized);
                _PositionInitialized = true;
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = SetValidValue(_Position, value, "Position");
                _PositionInitialized = true;
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private Position _Position;
        private bool _PositionInitialized;
        partial void OnPositionChanging(Position value);
        partial void OnPositionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "RouteSpot", "Route")]
        public Route Route
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Route>("EduNuke.RouteSpot", "Route").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Route>("EduNuke.RouteSpot", "Route").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Route> RouteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Route>("EduNuke.RouteSpot", "Route");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Route>("EduNuke.RouteSpot", "Route", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "SpotUser", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("EduNuke.SpotUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("EduNuke.SpotUser", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="Stock")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Stock : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Stock object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="remarks">Initial value of the Remarks property.</param>
        /// <param name="unit">Initial value of the Unit property.</param>
        public static Stock CreateStock(global::System.Int32 id, global::System.Int32 quantity, global::System.String remarks, global::System.String unit)
        {
            Stock stock = new Stock();
            stock.Id = id;
            stock.Quantity = quantity;
            stock.Remarks = remarks;
            stock.Unit = unit;
            return stock;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// 
        /// </summary>
        /// <LongDescription>
        /// Kg, meter, nos etc
        /// </LongDescription>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Unit
        {
            get
            {
                return _Unit;
            }
            set
            {
                OnUnitChanging(value);
                ReportPropertyChanging("Unit");
                _Unit = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Unit");
                OnUnitChanged();
            }
        }
        private global::System.String _Unit;
        partial void OnUnitChanging(global::System.String value);
        partial void OnUnitChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "ItemStock", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("EduNuke.ItemStock", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("EduNuke.ItemStock", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("EduNuke.ItemStock", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("EduNuke.ItemStock", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "StoreStock", "Store")]
        public Store Store
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("EduNuke.StoreStock", "Store").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("EduNuke.StoreStock", "Store").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Store> StoreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Store>("EduNuke.StoreStock", "Store");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Store>("EduNuke.StoreStock", "Store", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="Store")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Store : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Store object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="lastRequisitionNo">Initial value of the LastRequisitionNo property.</param>
        /// <param name="lastSaleNo">Initial value of the LastSaleNo property.</param>
        public static Store CreateStore(global::System.Int32 id, global::System.String name, global::System.Int32 lastRequisitionNo, global::System.Int32 lastSaleNo)
        {
            Store store = new Store();
            store.Id = id;
            store.Name = name;
            store.LastRequisitionNo = lastRequisitionNo;
            store.LastSaleNo = lastSaleNo;
            return store;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 
        /// </summary>
        /// <LongDescription>
        /// Library
        /// </LongDescription>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssuePeriod
        {
            get
            {
                return _IssuePeriod;
            }
            set
            {
                OnIssuePeriodChanging(value);
                ReportPropertyChanging("IssuePeriod");
                _IssuePeriod = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssuePeriod");
                OnIssuePeriodChanged();
            }
        }
        private Nullable<global::System.Int32> _IssuePeriod;
        partial void OnIssuePeriodChanging(Nullable<global::System.Int32> value);
        partial void OnIssuePeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LastRequisitionNo
        {
            get
            {
                return _LastRequisitionNo;
            }
            set
            {
                OnLastRequisitionNoChanging(value);
                ReportPropertyChanging("LastRequisitionNo");
                _LastRequisitionNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastRequisitionNo");
                OnLastRequisitionNoChanged();
            }
        }
        private global::System.Int32 _LastRequisitionNo;
        partial void OnLastRequisitionNoChanging(global::System.Int32 value);
        partial void OnLastRequisitionNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LastSaleNo
        {
            get
            {
                return _LastSaleNo;
            }
            set
            {
                OnLastSaleNoChanging(value);
                ReportPropertyChanging("LastSaleNo");
                _LastSaleNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastSaleNo");
                OnLastSaleNoChanged();
            }
        }
        private global::System.Int32 _LastSaleNo;
        partial void OnLastSaleNoChanging(global::System.Int32 value);
        partial void OnLastSaleNoChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "CollegeStore", "College")]
        public College College
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<College>("EduNuke.CollegeStore", "College").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<College>("EduNuke.CollegeStore", "College").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<College> CollegeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<College>("EduNuke.CollegeStore", "College");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<College>("EduNuke.CollegeStore", "College", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "StoreStock", "Stock")]
        public EntityCollection<Stock> Stocks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Stock>("EduNuke.StoreStock", "Stock");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Stock>("EduNuke.StoreStock", "Stock", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "StoreItemSale", "ItemSale")]
        public EntityCollection<ItemSale> ItemSales
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemSale>("EduNuke.StoreItemSale", "ItemSale");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemSale>("EduNuke.StoreItemSale", "ItemSale", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="Student")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Student : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Student object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static Student CreateStudent(global::System.Int32 id, global::System.String status)
        {
            Student student = new Student();
            student.Id = id;
            student.Status = status;
            return student;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClassRollNo
        {
            get
            {
                return _ClassRollNo;
            }
            set
            {
                OnClassRollNoChanging(value);
                ReportPropertyChanging("ClassRollNo");
                _ClassRollNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClassRollNo");
                OnClassRollNoChanged();
            }
        }
        private global::System.String _ClassRollNo;
        partial void OnClassRollNoChanging(global::System.String value);
        partial void OnClassRollNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UniversityRollNo
        {
            get
            {
                return _UniversityRollNo;
            }
            set
            {
                OnUniversityRollNoChanging(value);
                ReportPropertyChanging("UniversityRollNo");
                _UniversityRollNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UniversityRollNo");
                OnUniversityRollNoChanged();
            }
        }
        private global::System.String _UniversityRollNo;
        partial void OnUniversityRollNoChanging(global::System.String value);
        partial void OnUniversityRollNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EnrollmentDate
        {
            get
            {
                return _EnrollmentDate;
            }
            set
            {
                OnEnrollmentDateChanging(value);
                ReportPropertyChanging("EnrollmentDate");
                _EnrollmentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EnrollmentDate");
                OnEnrollmentDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EnrollmentDate;
        partial void OnEnrollmentDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEnrollmentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RegistrationDate
        {
            get
            {
                return _RegistrationDate;
            }
            set
            {
                OnRegistrationDateChanging(value);
                ReportPropertyChanging("RegistrationDate");
                _RegistrationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegistrationDate");
                OnRegistrationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RegistrationDate;
        partial void OnRegistrationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRegistrationDateChanged();
    
        /// <summary>
        /// Prospective
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "UserStudent", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EduNuke.UserStudent", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EduNuke.UserStudent", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EduNuke.UserStudent", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EduNuke.UserStudent", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "SectionStudent", "Section")]
        public Section Section
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Section>("EduNuke.SectionStudent", "Section").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Section>("EduNuke.SectionStudent", "Section").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Section> SectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Section>("EduNuke.SectionStudent", "Section");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Section>("EduNuke.SectionStudent", "Section", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "SubjectInstanceStudent", "SubjectInstance")]
        public SubjectInstance SubjectInstance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubjectInstance>("EduNuke.SubjectInstanceStudent", "SubjectInstance").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubjectInstance>("EduNuke.SubjectInstanceStudent", "SubjectInstance").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubjectInstance> SubjectInstanceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubjectInstance>("EduNuke.SubjectInstanceStudent", "SubjectInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubjectInstance>("EduNuke.SubjectInstanceStudent", "SubjectInstance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "StudentResult", "Result")]
        public EntityCollection<Result> Results
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Result>("EduNuke.StudentResult", "Result");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Result>("EduNuke.StudentResult", "Result", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "StudentAssignmentSolution", "AssignmentSolution")]
        public EntityCollection<AssignmentSolution> AssignmentSolutions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AssignmentSolution>("EduNuke.StudentAssignmentSolution", "AssignmentSolution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AssignmentSolution>("EduNuke.StudentAssignmentSolution", "AssignmentSolution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "UserStudent1", "User")]
        public User Parent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EduNuke.UserStudent1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EduNuke.UserStudent1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> ParentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EduNuke.UserStudent1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EduNuke.UserStudent1", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="Subject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Subject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Subject object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="maxSessionalMarks">Initial value of the MaxSessionalMarks property.</param>
        /// <param name="maxInternalMarks">Initial value of the MaxInternalMarks property.</param>
        /// <param name="maxLabMarks">Initial value of the MaxLabMarks property.</param>
        /// <param name="maxAssignmentsMarks">Initial value of the MaxAssignmentsMarks property.</param>
        public static Subject CreateSubject(global::System.Int32 id, global::System.String name, global::System.Int32 maxSessionalMarks, global::System.Int32 maxInternalMarks, global::System.Int32 maxLabMarks, global::System.Int32 maxAssignmentsMarks)
        {
            Subject subject = new Subject();
            subject.Id = id;
            subject.Name = name;
            subject.MaxSessionalMarks = maxSessionalMarks;
            subject.MaxInternalMarks = maxInternalMarks;
            subject.MaxLabMarks = maxLabMarks;
            subject.MaxAssignmentsMarks = maxAssignmentsMarks;
            return subject;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaxSessionalMarks
        {
            get
            {
                return _MaxSessionalMarks;
            }
            set
            {
                OnMaxSessionalMarksChanging(value);
                ReportPropertyChanging("MaxSessionalMarks");
                _MaxSessionalMarks = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxSessionalMarks");
                OnMaxSessionalMarksChanged();
            }
        }
        private global::System.Int32 _MaxSessionalMarks;
        partial void OnMaxSessionalMarksChanging(global::System.Int32 value);
        partial void OnMaxSessionalMarksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaxInternalMarks
        {
            get
            {
                return _MaxInternalMarks;
            }
            set
            {
                OnMaxInternalMarksChanging(value);
                ReportPropertyChanging("MaxInternalMarks");
                _MaxInternalMarks = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxInternalMarks");
                OnMaxInternalMarksChanged();
            }
        }
        private global::System.Int32 _MaxInternalMarks;
        partial void OnMaxInternalMarksChanging(global::System.Int32 value);
        partial void OnMaxInternalMarksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaxLabMarks
        {
            get
            {
                return _MaxLabMarks;
            }
            set
            {
                OnMaxLabMarksChanging(value);
                ReportPropertyChanging("MaxLabMarks");
                _MaxLabMarks = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxLabMarks");
                OnMaxLabMarksChanged();
            }
        }
        private global::System.Int32 _MaxLabMarks;
        partial void OnMaxLabMarksChanging(global::System.Int32 value);
        partial void OnMaxLabMarksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaxAssignmentsMarks
        {
            get
            {
                return _MaxAssignmentsMarks;
            }
            set
            {
                OnMaxAssignmentsMarksChanging(value);
                ReportPropertyChanging("MaxAssignmentsMarks");
                _MaxAssignmentsMarks = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxAssignmentsMarks");
                OnMaxAssignmentsMarksChanged();
            }
        }
        private global::System.Int32 _MaxAssignmentsMarks;
        partial void OnMaxAssignmentsMarksChanging(global::System.Int32 value);
        partial void OnMaxAssignmentsMarksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "DepartmentSubjects", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("EduNuke.DepartmentSubjects", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("EduNuke.DepartmentSubjects", "Department").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("EduNuke.DepartmentSubjects", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("EduNuke.DepartmentSubjects", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "SemestersSubject", "Semesters")]
        public Semester Semester
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Semester>("EduNuke.SemestersSubject", "Semesters").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Semester>("EduNuke.SemestersSubject", "Semesters").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Semester> SemesterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Semester>("EduNuke.SemestersSubject", "Semesters");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Semester>("EduNuke.SemestersSubject", "Semesters", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "SubjectSubjectInstance", "SubjectInstance")]
        public EntityCollection<SubjectInstance> SubjectInstances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubjectInstance>("EduNuke.SubjectSubjectInstance", "SubjectInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubjectInstance>("EduNuke.SubjectSubjectInstance", "SubjectInstance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "SubjectBook", "Book")]
        public EntityCollection<Book> RecommededBooks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Book>("EduNuke.SubjectBook", "Book");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Book>("EduNuke.SubjectBook", "Book", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "SubjectExam", "Exam")]
        public EntityCollection<Exam> Exams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Exam>("EduNuke.SubjectExam", "Exam");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Exam>("EduNuke.SubjectExam", "Exam", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "SubjectAssignment", "Assignment")]
        public EntityCollection<Assignment> Assignments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Assignment>("EduNuke.SubjectAssignment", "Assignment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Assignment>("EduNuke.SubjectAssignment", "Assignment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "DocumentsSubject", "Documents")]
        public Document Syllabus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("EduNuke.DocumentsSubject", "Documents").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("EduNuke.DocumentsSubject", "Documents").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Document> SyllabusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("EduNuke.DocumentsSubject", "Documents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Document>("EduNuke.DocumentsSubject", "Documents", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="SubjectInstance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubjectInstance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubjectInstance object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static SubjectInstance CreateSubjectInstance(global::System.Int32 id)
        {
            SubjectInstance subjectInstance = new SubjectInstance();
            subjectInstance.Id = id;
            return subjectInstance;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "SubjectSubjectInstance", "Subject")]
        public Subject Subject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("EduNuke.SubjectSubjectInstance", "Subject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("EduNuke.SubjectSubjectInstance", "Subject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subject> SubjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("EduNuke.SubjectSubjectInstance", "Subject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subject>("EduNuke.SubjectSubjectInstance", "Subject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "EmployeeSubjectInstance", "Employee")]
        public Employee Faculty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("EduNuke.EmployeeSubjectInstance", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("EduNuke.EmployeeSubjectInstance", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> FacultyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("EduNuke.EmployeeSubjectInstance", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("EduNuke.EmployeeSubjectInstance", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "SubjectInstanceEvent", "Event")]
        public EntityCollection<Event> Lectures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("EduNuke.SubjectInstanceEvent", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("EduNuke.SubjectInstanceEvent", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "SubjectInstanceStudent", "Student")]
        public EntityCollection<Student> Students
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Student>("EduNuke.SubjectInstanceStudent", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Student>("EduNuke.SubjectInstanceStudent", "Student", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="Transaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Transaction object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="transactionDate">Initial value of the TransactionDate property.</param>
        /// <param name="transactionNo">Initial value of the TransactionNo property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static Transaction CreateTransaction(global::System.Int32 id, global::System.DateTime creationDate, global::System.DateTime transactionDate, global::System.String transactionNo, global::System.Double amount, global::System.String status)
        {
            Transaction transaction = new Transaction();
            transaction.Id = id;
            transaction.CreationDate = creationDate;
            transaction.TransactionDate = transactionDate;
            transaction.TransactionNo = transactionNo;
            transaction.Amount = amount;
            transaction.Status = status;
            return transaction;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransactionDate
        {
            get
            {
                return _TransactionDate;
            }
            set
            {
                OnTransactionDateChanging(value);
                ReportPropertyChanging("TransactionDate");
                _TransactionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionDate");
                OnTransactionDateChanged();
            }
        }
        private global::System.DateTime _TransactionDate;
        partial void OnTransactionDateChanging(global::System.DateTime value);
        partial void OnTransactionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransactionNo
        {
            get
            {
                return _TransactionNo;
            }
            set
            {
                OnTransactionNoChanging(value);
                ReportPropertyChanging("TransactionNo");
                _TransactionNo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TransactionNo");
                OnTransactionNoChanged();
            }
        }
        private global::System.String _TransactionNo;
        partial void OnTransactionNoChanging(global::System.String value);
        partial void OnTransactionNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Double _Amount;
        partial void OnAmountChanging(global::System.Double value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// 
        /// </summary>
        /// <LongDescription>
        /// posted /pending/partial
        /// </LongDescription>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DueDate
        {
            get
            {
                return _DueDate;
            }
            set
            {
                OnDueDateChanging(value);
                ReportPropertyChanging("DueDate");
                _DueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DueDate");
                OnDueDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DueDate;
        partial void OnDueDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDueDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "TransactionTypeTransaction", "TransactionType")]
        public TransactionType TransactionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionType>("EduNuke.TransactionTypeTransaction", "TransactionType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionType>("EduNuke.TransactionTypeTransaction", "TransactionType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TransactionType> TransactionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionType>("EduNuke.TransactionTypeTransaction", "TransactionType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TransactionType>("EduNuke.TransactionTypeTransaction", "TransactionType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "TransactionDebitsCredits", "DebitsCredits")]
        public EntityCollection<DebitsCredits> DebitsCredits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DebitsCredits>("EduNuke.TransactionDebitsCredits", "DebitsCredits");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DebitsCredits>("EduNuke.TransactionDebitsCredits", "DebitsCredits", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "UserTransaction", "User")]
        public User AssociatedUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EduNuke.UserTransaction", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EduNuke.UserTransaction", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> AssociatedUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EduNuke.UserTransaction", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EduNuke.UserTransaction", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "InstituteGroupTransaction", "InstituteGroup")]
        public InstituteGroup InstituteGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstituteGroup>("EduNuke.InstituteGroupTransaction", "InstituteGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstituteGroup>("EduNuke.InstituteGroupTransaction", "InstituteGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InstituteGroup> InstituteGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstituteGroup>("EduNuke.InstituteGroupTransaction", "InstituteGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InstituteGroup>("EduNuke.InstituteGroupTransaction", "InstituteGroup", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="TransactionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransactionType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransactionType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static TransactionType CreateTransactionType(global::System.Int32 id, global::System.String name)
        {
            TransactionType transactionType = new TransactionType();
            transactionType.Id = id;
            transactionType.Name = name;
            return transactionType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 
        /// </summary>
        /// <LongDescription>
        /// SemesterFees/Fine/HostelFees
        /// </LongDescription>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SuggestedAmount
        {
            get
            {
                return _SuggestedAmount;
            }
            set
            {
                OnSuggestedAmountChanging(value);
                ReportPropertyChanging("SuggestedAmount");
                _SuggestedAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SuggestedAmount");
                OnSuggestedAmountChanged();
            }
        }
        private Nullable<global::System.Int32> _SuggestedAmount;
        partial void OnSuggestedAmountChanging(Nullable<global::System.Int32> value);
        partial void OnSuggestedAmountChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "TransactionTypeTransaction", "Transaction")]
        public EntityCollection<Transaction> Transactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transaction>("EduNuke.TransactionTypeTransaction", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transaction>("EduNuke.TransactionTypeTransaction", "Transaction", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="contact">Initial value of the Contact property.</param>
        /// <param name="postalAddress">Initial value of the PostalAddress property.</param>
        /// <param name="permanentAddress">Initial value of the PermanentAddress property.</param>
        /// <param name="dOB">Initial value of the DOB property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static User CreateUser(global::System.Int32 id, Name name, ContactInfo contact, Address postalAddress, Address permanentAddress, global::System.DateTime dOB, global::System.String status)
        {
            User user = new User();
            user.Id = id;
            user.Name = StructuralObject.VerifyComplexObjectIsNotNull(name, "Name");
            user.Contact = StructuralObject.VerifyComplexObjectIsNotNull(contact, "Contact");
            user.PostalAddress = StructuralObject.VerifyComplexObjectIsNotNull(postalAddress, "PostalAddress");
            user.PermanentAddress = StructuralObject.VerifyComplexObjectIsNotNull(permanentAddress, "PermanentAddress");
            user.DOB = dOB;
            user.Status = status;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UIId
        {
            get
            {
                return _UIId;
            }
            set
            {
                OnUIIdChanging(value);
                ReportPropertyChanging("UIId");
                _UIId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UIId");
                OnUIIdChanged();
            }
        }
        private global::System.String _UIId;
        partial void OnUIIdChanging(global::System.String value);
        partial void OnUIIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FatherName
        {
            get
            {
                return _FatherName;
            }
            set
            {
                OnFatherNameChanging(value);
                ReportPropertyChanging("FatherName");
                _FatherName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FatherName");
                OnFatherNameChanged();
            }
        }
        private global::System.String _FatherName;
        partial void OnFatherNameChanging(global::System.String value);
        partial void OnFatherNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MotherName
        {
            get
            {
                return _MotherName;
            }
            set
            {
                OnMotherNameChanging(value);
                ReportPropertyChanging("MotherName");
                _MotherName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MotherName");
                OnMotherNameChanged();
            }
        }
        private global::System.String _MotherName;
        partial void OnMotherNameChanging(global::System.String value);
        partial void OnMotherNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DOB
        {
            get
            {
                return _DOB;
            }
            set
            {
                OnDOBChanging(value);
                ReportPropertyChanging("DOB");
                _DOB = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DOB");
                OnDOBChanged();
            }
        }
        private global::System.DateTime _DOB;
        partial void OnDOBChanging(global::System.DateTime value);
        partial void OnDOBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Ineterests
        {
            get
            {
                return _Ineterests;
            }
            set
            {
                OnIneterestsChanging(value);
                ReportPropertyChanging("Ineterests");
                _Ineterests = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Ineterests");
                OnIneterestsChanged();
            }
        }
        private global::System.String _Ineterests;
        partial void OnIneterestsChanging(global::System.String value);
        partial void OnIneterestsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion
        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public Name Name
        {
            get
            {
                _Name = GetValidValue(_Name, "Name", false, _NameInitialized);
                _NameInitialized = true;
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = SetValidValue(_Name, value, "Name");
                _NameInitialized = true;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private Name _Name;
        private bool _NameInitialized;
        partial void OnNameChanging(Name value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public ContactInfo Contact
        {
            get
            {
                _Contact = GetValidValue(_Contact, "Contact", false, _ContactInitialized);
                _ContactInitialized = true;
                return _Contact;
            }
            set
            {
                OnContactChanging(value);
                ReportPropertyChanging("Contact");
                _Contact = SetValidValue(_Contact, value, "Contact");
                _ContactInitialized = true;
                ReportPropertyChanged("Contact");
                OnContactChanged();
            }
        }
        private ContactInfo _Contact;
        private bool _ContactInitialized;
        partial void OnContactChanging(ContactInfo value);
        partial void OnContactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public Address PostalAddress
        {
            get
            {
                _PostalAddress = GetValidValue(_PostalAddress, "PostalAddress", false, _PostalAddressInitialized);
                _PostalAddressInitialized = true;
                return _PostalAddress;
            }
            set
            {
                OnPostalAddressChanging(value);
                ReportPropertyChanging("PostalAddress");
                _PostalAddress = SetValidValue(_PostalAddress, value, "PostalAddress");
                _PostalAddressInitialized = true;
                ReportPropertyChanged("PostalAddress");
                OnPostalAddressChanged();
            }
        }
        private Address _PostalAddress;
        private bool _PostalAddressInitialized;
        partial void OnPostalAddressChanging(Address value);
        partial void OnPostalAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public Address PermanentAddress
        {
            get
            {
                _PermanentAddress = GetValidValue(_PermanentAddress, "PermanentAddress", false, _PermanentAddressInitialized);
                _PermanentAddressInitialized = true;
                return _PermanentAddress;
            }
            set
            {
                OnPermanentAddressChanging(value);
                ReportPropertyChanging("PermanentAddress");
                _PermanentAddress = SetValidValue(_PermanentAddress, value, "PermanentAddress");
                _PermanentAddressInitialized = true;
                ReportPropertyChanged("PermanentAddress");
                OnPermanentAddressChanged();
            }
        }
        private Address _PermanentAddress;
        private bool _PermanentAddressInitialized;
        partial void OnPermanentAddressChanging(Address value);
        partial void OnPermanentAddressChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "UserStudent", "Student")]
        public Student Student
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("EduNuke.UserStudent", "Student").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("EduNuke.UserStudent", "Student").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Student> StudentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("EduNuke.UserStudent", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Student>("EduNuke.UserStudent", "Student", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "UserEmployee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("EduNuke.UserEmployee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("EduNuke.UserEmployee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("EduNuke.UserEmployee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("EduNuke.UserEmployee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "UserAttendance", "Attendance")]
        public EntityCollection<Attendance> Attendances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Attendance>("EduNuke.UserAttendance", "Attendance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Attendance>("EduNuke.UserAttendance", "Attendance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "UserDocuments", "Documents")]
        public EntityCollection<Document> Documents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Document>("EduNuke.UserDocuments", "Documents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Document>("EduNuke.UserDocuments", "Documents", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "UserStudent1", "Student")]
        public EntityCollection<Student> Children
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Student>("EduNuke.UserStudent1", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Student>("EduNuke.UserStudent1", "Student", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "UserExperience", "Experience")]
        public EntityCollection<Experience> Experiences
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Experience>("EduNuke.UserExperience", "Experience");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Experience>("EduNuke.UserExperience", "Experience", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "UserQualification", "Qualification")]
        public EntityCollection<Qualification> Qualifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Qualification>("EduNuke.UserQualification", "Qualification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Qualification>("EduNuke.UserQualification", "Qualification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "SpotUser", "Spot")]
        public Spot Spot
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Spot>("EduNuke.SpotUser", "Spot").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Spot>("EduNuke.SpotUser", "Spot").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Spot> SpotReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Spot>("EduNuke.SpotUser", "Spot");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Spot>("EduNuke.SpotUser", "Spot", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "UserIssueDetails", "IssueDetails")]
        public EntityCollection<IssueDetails> IssueDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IssueDetails>("EduNuke.UserIssueDetails", "IssueDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IssueDetails>("EduNuke.UserIssueDetails", "IssueDetails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "UserItemRequisition", "ItemRequisition")]
        public EntityCollection<ItemRequisition> ItemRequisitions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemRequisition>("EduNuke.UserItemRequisition", "ItemRequisition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemRequisition>("EduNuke.UserItemRequisition", "ItemRequisition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "UserAccount", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("EduNuke.UserAccount", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("EduNuke.UserAccount", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("EduNuke.UserAccount", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("EduNuke.UserAccount", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "UserTransaction", "Transaction")]
        public EntityCollection<Transaction> Transactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transaction>("EduNuke.UserTransaction", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transaction>("EduNuke.UserTransaction", "Transaction", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EduNuke", Name="Vehicle")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Vehicle : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Vehicle object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Vehicle CreateVehicle(global::System.Int32 id)
        {
            Vehicle vehicle = new Vehicle();
            vehicle.Id = id;
            return vehicle;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Capacity
        {
            get
            {
                return _Capacity;
            }
            set
            {
                OnCapacityChanging(value);
                ReportPropertyChanging("Capacity");
                _Capacity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Capacity");
                OnCapacityChanged();
            }
        }
        private global::System.String _Capacity;
        partial void OnCapacityChanging(global::System.String value);
        partial void OnCapacityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VehicleNo
        {
            get
            {
                return _VehicleNo;
            }
            set
            {
                OnVehicleNoChanging(value);
                ReportPropertyChanging("VehicleNo");
                _VehicleNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VehicleNo");
                OnVehicleNoChanged();
            }
        }
        private global::System.String _VehicleNo;
        partial void OnVehicleNoChanging(global::System.String value);
        partial void OnVehicleNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EngineNo
        {
            get
            {
                return _EngineNo;
            }
            set
            {
                OnEngineNoChanging(value);
                ReportPropertyChanging("EngineNo");
                _EngineNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EngineNo");
                OnEngineNoChanged();
            }
        }
        private global::System.String _EngineNo;
        partial void OnEngineNoChanging(global::System.String value);
        partial void OnEngineNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ChasisNo
        {
            get
            {
                return _ChasisNo;
            }
            set
            {
                OnChasisNoChanging(value);
                ReportPropertyChanging("ChasisNo");
                _ChasisNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ChasisNo");
                OnChasisNoChanged();
            }
        }
        private global::System.String _ChasisNo;
        partial void OnChasisNoChanging(global::System.String value);
        partial void OnChasisNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Make
        {
            get
            {
                return _Make;
            }
            set
            {
                OnMakeChanging(value);
                ReportPropertyChanging("Make");
                _Make = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Make");
                OnMakeChanged();
            }
        }
        private global::System.String _Make;
        partial void OnMakeChanging(global::System.String value);
        partial void OnMakeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Model
        {
            get
            {
                return _Model;
            }
            set
            {
                OnModelChanging(value);
                ReportPropertyChanging("Model");
                _Model = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Model");
                OnModelChanged();
            }
        }
        private global::System.String _Model;
        partial void OnModelChanging(global::System.String value);
        partial void OnModelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EduNuke", "RouteVehicle", "Route")]
        public EntityCollection<Route> Routes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Route>("EduNuke.RouteVehicle", "Route");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Route>("EduNuke.RouteVehicle", "Route", value);
                }
            }
        }

        #endregion
    }

    #endregion
    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="EduNuke", Name="Address")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Address : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Address object.
        /// </summary>
        /// <param name="unit">Initial value of the Unit property.</param>
        public static Address CreateAddress(global::System.String unit)
        {
            Address address = new Address();
            address.Unit = unit;
            return address;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Region
        {
            get
            {
                return _Region;
            }
            set
            {
                OnRegionChanging(value);
                ReportPropertyChanging("Region");
                _Region = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Region");
                OnRegionChanged();
            }
        }
        private global::System.String _Region;
        partial void OnRegionChanging(global::System.String value);
        partial void OnRegionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Landmark
        {
            get
            {
                return _Landmark;
            }
            set
            {
                OnLandmarkChanging(value);
                ReportPropertyChanging("Landmark");
                _Landmark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Landmark");
                OnLandmarkChanged();
            }
        }
        private global::System.String _Landmark;
        partial void OnLandmarkChanging(global::System.String value);
        partial void OnLandmarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Unit
        {
            get
            {
                return _Unit;
            }
            set
            {
                OnUnitChanging(value);
                ReportPropertyChanging("Unit");
                _Unit = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Unit");
                OnUnitChanged();
            }
        }
        private global::System.String _Unit;
        partial void OnUnitChanging(global::System.String value);
        partial void OnUnitChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="EduNuke", Name="ContactInfo")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ContactInfo : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContactInfo object.
        /// </summary>
        /// <param name="mobile">Initial value of the Mobile property.</param>
        public static ContactInfo CreateContactInfo(global::System.String mobile)
        {
            ContactInfo contactInfo = new ContactInfo();
            contactInfo.Mobile = mobile;
            return contactInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax2
        {
            get
            {
                return _Fax2;
            }
            set
            {
                OnFax2Changing(value);
                ReportPropertyChanging("Fax2");
                _Fax2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax2");
                OnFax2Changed();
            }
        }
        private global::System.String _Fax2;
        partial void OnFax2Changing(global::System.String value);
        partial void OnFax2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Landline2
        {
            get
            {
                return _Landline2;
            }
            set
            {
                OnLandline2Changing(value);
                ReportPropertyChanging("Landline2");
                _Landline2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Landline2");
                OnLandline2Changed();
            }
        }
        private global::System.String _Landline2;
        partial void OnLandline2Changing(global::System.String value);
        partial void OnLandline2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Landline
        {
            get
            {
                return _Landline;
            }
            set
            {
                OnLandlineChanging(value);
                ReportPropertyChanging("Landline");
                _Landline = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Landline");
                OnLandlineChanged();
            }
        }
        private global::System.String _Landline;
        partial void OnLandlineChanging(global::System.String value);
        partial void OnLandlineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailId
        {
            get
            {
                return _EmailId;
            }
            set
            {
                OnEmailIdChanging(value);
                ReportPropertyChanging("EmailId");
                _EmailId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailId");
                OnEmailIdChanged();
            }
        }
        private global::System.String _EmailId;
        partial void OnEmailIdChanging(global::System.String value);
        partial void OnEmailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Website
        {
            get
            {
                return _Website;
            }
            set
            {
                OnWebsiteChanging(value);
                ReportPropertyChanging("Website");
                _Website = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Website");
                OnWebsiteChanged();
            }
        }
        private global::System.String _Website;
        partial void OnWebsiteChanging(global::System.String value);
        partial void OnWebsiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Mobile
        {
            get
            {
                return _Mobile;
            }
            set
            {
                OnMobileChanging(value);
                ReportPropertyChanging("Mobile");
                _Mobile = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Mobile");
                OnMobileChanged();
            }
        }
        private global::System.String _Mobile;
        partial void OnMobileChanging(global::System.String value);
        partial void OnMobileChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="EduNuke", Name="FinancialDetails")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class FinancialDetails : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BankName
        {
            get
            {
                return _BankName;
            }
            set
            {
                OnBankNameChanging(value);
                ReportPropertyChanging("BankName");
                _BankName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BankName");
                OnBankNameChanged();
            }
        }
        private global::System.String _BankName;
        partial void OnBankNameChanging(global::System.String value);
        partial void OnBankNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BankAccNo
        {
            get
            {
                return _BankAccNo;
            }
            set
            {
                OnBankAccNoChanging(value);
                ReportPropertyChanging("BankAccNo");
                _BankAccNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BankAccNo");
                OnBankAccNoChanged();
            }
        }
        private global::System.String _BankAccNo;
        partial void OnBankAccNoChanging(global::System.String value);
        partial void OnBankAccNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PANNo
        {
            get
            {
                return _PANNo;
            }
            set
            {
                OnPANNoChanging(value);
                ReportPropertyChanging("PANNo");
                _PANNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PANNo");
                OnPANNoChanged();
            }
        }
        private global::System.String _PANNo;
        partial void OnPANNoChanging(global::System.String value);
        partial void OnPANNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PFNo
        {
            get
            {
                return _PFNo;
            }
            set
            {
                OnPFNoChanging(value);
                ReportPropertyChanging("PFNo");
                _PFNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PFNo");
                OnPFNoChanged();
            }
        }
        private global::System.String _PFNo;
        partial void OnPFNoChanging(global::System.String value);
        partial void OnPFNoChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="EduNuke", Name="Name")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Name : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Name object.
        /// </summary>
        /// <param name="first">Initial value of the First property.</param>
        /// <param name="middle">Initial value of the Middle property.</param>
        /// <param name="last">Initial value of the Last property.</param>
        public static Name CreateName(global::System.String first, global::System.String middle, global::System.String last)
        {
            Name name = new Name();
            name.First = first;
            name.Middle = middle;
            name.Last = last;
            return name;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String First
        {
            get
            {
                return _First;
            }
            set
            {
                OnFirstChanging(value);
                ReportPropertyChanging("First");
                _First = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("First");
                OnFirstChanged();
            }
        }
        private global::System.String _First;
        partial void OnFirstChanging(global::System.String value);
        partial void OnFirstChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Middle
        {
            get
            {
                return _Middle;
            }
            set
            {
                OnMiddleChanging(value);
                ReportPropertyChanging("Middle");
                _Middle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Middle");
                OnMiddleChanged();
            }
        }
        private global::System.String _Middle;
        partial void OnMiddleChanging(global::System.String value);
        partial void OnMiddleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Last
        {
            get
            {
                return _Last;
            }
            set
            {
                OnLastChanging(value);
                ReportPropertyChanging("Last");
                _Last = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Last");
                OnLastChanged();
            }
        }
        private global::System.String _Last;
        partial void OnLastChanging(global::System.String value);
        partial void OnLastChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="EduNuke", Name="Position")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Position : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Position object.
        /// </summary>
        /// <param name="longitude">Initial value of the Longitude property.</param>
        public static Position CreatePosition(global::System.Double longitude)
        {
            Position position = new Position();
            position.Longitude = longitude;
            return position;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private Nullable<global::System.Double> _Latitude;
        partial void OnLatitudeChanging(Nullable<global::System.Double> value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                OnLongitudeChanging(value);
                ReportPropertyChanging("Longitude");
                _Longitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Longitude");
                OnLongitudeChanged();
            }
        }
        private global::System.Double _Longitude;
        partial void OnLongitudeChanging(global::System.Double value);
        partial void OnLongitudeChanged();

        #endregion
    }

    #endregion
    
}
